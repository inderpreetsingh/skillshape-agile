{"version":3,"sources":["meteor://ðŸ’»app/packages/menway_luma-component/packages/menway_luma-component.js"],"names":[],"mappingsfile":"/packages/menway_luma-component.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/menway:luma-component/lib/mixins/Base.mixin.coffee.js                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n\n/*\n  ```coffeescript\n    ComponentMixins.SomeMixin =\n      extended: ->\n        classProperty: \"Yo Dawg\"\n\n        classMethod: ( someArg ) ->\n          if _.isString someArg then return \"#{ someArg }....\"\n\n        @include\n          instanceProperty: \"Hey...\"\n\n          instanceMethod: ( someArg ) ->\n            if someArg\n              return @instanceProperty\n\n          events:\n            \"click\": ( event, template ) ->\n              template.instanceMethod event.val\n  ```\n */\n\n/*\n  ```coffeescript\n    class @ExampleComponent extends Component\n      @extend ComponentMixins.SomeMixin\n  ```\n */\n                    \n\nComponentMixins = {};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/menway:luma-component/lib/mixins/ChooseTemplate.mixin.coffee.js                         //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n\n/*\n  ```html\n    <template name=\"DataTable\">\n      <div id=\"{{selector}}\" class=\"dataTable-container\">\n          {{#if UI.contentBlock }}\n              {{> UI.contentBlock }}\n          {{else}}\n              {{#with self.chooseTemplate template }}\n                  {{#with .. }}     {{! original arguments to DataTable }}\n                      {{> .. }}     {{! return value from chooseTemplate( template ) }}\n                  {{/with}}\n              {{/with}}\n          {{/if}}\n      </div>\n    </template>\n\n    <template name=\"DataTableDefault\">\n        <table class=\"table display {{../../styles}}\" cellspacing=\"0\" width=\"100%\"></table>\n    </template>\n  ```\n */\nComponentMixins.ChooseTemplate = {\n  extended: function() {\n    if (Meteor.isClient) {\n      return this.include({\n        defaultTemplate: function() {\n          return \"\" + this.__name__ + \"Default\";\n        },\n        chooseTemplate: function(template) {\n          if (template == null) {\n            template = null;\n          }\n          if (template == null) {\n            template = this.defaultTemplate();\n          }\n          if (Template[template]) {\n            template = Template[template];\n          } else if (Template[this.defaultTemplate()]) {\n            template = Template[this.defaultTemplate()];\n          } else {\n            throw new Error(\"\" + (this.defaultTemplate()) + \" is not defined.\");\n          }\n          this.log(\"chooseTemplate\", template);\n          return template;\n        }\n      });\n    }\n  }\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/menway:luma-component/lib/Component.coffee.js                                           //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar           \n  __slice = [].slice,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nComponent = (function() {\n  Component.prototype.__name__ = void 0;\n\n  Component.prototype.events = {};\n\n  function Component(context) {\n    var attr, self, templateInstance;\n    if (context == null) {\n      context = {};\n    }\n    if (this.__name__ === void 0) {\n      throw new Error(\"All components must have defined a unique __name__ instance property\");\n    }\n    if (Meteor.isClient) {\n      templateInstance = context;\n      if (\"data\" in templateInstance) {\n        this.data = templateInstance.data;\n      }\n    }\n    if (Meteor.isServer) {\n      this.data = context;\n    }\n    if (!this.data) {\n      this.data = {};\n    }\n    if (this.data && this.defaults) {\n      this.data.defaults = this.defaults;\n    }\n    if (!this.data.options) {\n      this.data.options = {};\n    }\n    if (Meteor.isClient && templateInstance.__component__) {\n      templateInstance.__component__.events = this.events;\n      if (!this.data.id) {\n        this.data.id = \"\" + this.__name__ + \"-\" + templateInstance.__component__.guid;\n      }\n      this.data.selector = \"#\" + this.data.id;\n    }\n    if (this.data) {\n      for (attr in this.data) {\n        this.addGetterSetter('data', attr);\n      }\n    }\n    if (this.options && this.defaults) {\n      this.options(_.defaults(this.options(), this.defaults()));\n    }\n    if (Meteor.isClient && templateInstance.__component__) {\n      self = _.extend(templateInstance, this);\n      self.__component__.rendered = self.rendered;\n      self.__component__.destroyed = self.destroyed;\n      self.data.self = self;\n    }\n    if (Meteor.isServer) {\n      self = this;\n    }\n    this.log(\"created\", self);\n  }\n\n  Component.prototype.rendered = function() {\n    if (Meteor.isClient) {\n      this.__component__.self = this;\n      this.log(\"rendered\", this);\n    }\n    if (Meteor.isServer) {\n      throw new Error(\"Rendered callback is only available on the client.\");\n    }\n  };\n\n  Component.prototype.destroyed = function() {\n    if (Meteor.isClient) {\n      this.log(\"destroyed\", this);\n    }\n    if (Meteor.isServer) {\n      throw new Error(\"Destroyed callback is only available on the client.\");\n    }\n  };\n\n  Component.prototype.isDebug = function() {\n    if (this.debug) {\n      return this.debug();\n    } else {\n      return false;\n    }\n  };\n\n  Component.prototype.log = function(message, object) {\n    if (this.isDebug()) {\n      if (this.isDebug() === \"all\" || message.indexOf(this.isDebug()) !== -1) {\n        return console.log(\"\" + this.__name__ + \":\" + (this.id()) + \":\" + message + \" ->\", object);\n      }\n    }\n  };\n\n\n  /*\n    ```javascript\n      { data:\n        { doors: 2,\n          color: 'red',\n          options: {\n            performance: [Object],\n            convertible: [Object]\n        }\n      },\n        doors: [Function],\n        color: [Function],\n        options: [Function]\n      }\n    ```\n   */\n\n  Component.prototype.addGetterSetter = function(propertyAttr, attr) {\n    return this[attr] = function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return this[propertyAttr][attr];\n      } else if (args.length === 1) {\n        this[propertyAttr][attr] = args[0];\n        return this.log(\"\" + propertyAttr + \":\" + attr + \":set\", args[0]);\n      } else {\n        throw new Error(\"Only one argument is allowed to a setter method.\");\n      }\n    };\n  };\n\n\n  /*\n    ```coffeescript\n      ORM =\n      find: ( id ) -> return id\n      create: ( attrs ) -> return attrs\n      extended: ->\n        @include\n          save: ( id ) -> return id\n          destroy: ( id ) -> return true\n    ```\n   */\n\n  Component.extend = function(obj) {\n    var key, value, _ref;\n    for (key in obj) {\n      value = obj[key];\n      if (__indexOf.call(Component.keywords, key) < 0) {\n        this[key] = value;\n      }\n    }\n    if ((_ref = obj.extended) != null) {\n      _ref.apply(this);\n    }\n    return this;\n  };\n\n  Component.include = function(obj) {\n    var key, value, _ref;\n    for (key in obj) {\n      value = obj[key];\n      if (__indexOf.call(Component.keywords, key) < 0) {\n        if (key === \"events\") {\n          this.prototype.events = _.extend(this.prototype.events, value);\n        } else {\n          this.prototype[key] = value;\n        }\n      }\n    }\n    if ((_ref = obj.included) != null) {\n      _ref.apply(this);\n    }\n    return this;\n  };\n\n  Component.keywords = ['extended', 'included'];\n\n  return Component;\n\n})();\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}