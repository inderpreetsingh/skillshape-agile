{"version":3,"sources":["meteor://ðŸ’»app/packages/alethes_pages/lib/pages.coffee"],"names":[],"mappings":"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","file":"/packages/alethes_pages.js","sourcesContent":["@__Pages = class Pages\n\n  settings:\n    \n    #settingName: [canBeMadeAvailableToTheClient, expectedTypes(s), defaultValue]\n    \n    dataMargin: [true, Number, 3]\n    divWrapper: [true, Match.OneOf(\n      Match.Optional(String)\n      Match.Optional(Boolean)\n    ), \"pagesCont\"] #If defined, should be the wrapper's CSS classname\n    fields: [true, Object, {}]\n    filters: [true, Object, {}]\n    itemTemplate: [true, String, \"_pagesItemDefault\"]\n    navShowEdges: [true, Boolean, false] #If true, overrides navShowFirst and navShowLast\n    navShowFirst: [true, Boolean, true] #If true, overrides navShowEdges\n    navShowLast: [true, Boolean, true] #If true, overrides navShowEdges\n    resetOnReload: [true, Boolean, false]\n    paginationMargin: [true, Number, 3]\n    perPage: [true, Number, 10]\n    #requestTimeout: [true, Number, 2]\n    route: [true, String, \"/page/\"]\n    router: [true, Match.Optional(String), undefined] #Can be any type. Use only in comparisons. Expects String or Boolean\n    routerTemplate: [true, String, \"pages\"]\n    routerLayout: [true, Match.Optional(String), undefined]\n    sort: [true, Object, {}]\n    \n    # Unavailable to the client after initialization\n    \n    auth: [false, Match.Optional(Function), undefined]\n    availableSettings: [false, Object, {}]\n    fastRender: [false, Boolean, false]\n    homeRoute: [false, Match.OneOf(String, Array, Boolean), \"/\"]\n    infinite: [false, Boolean, false]\n    infiniteItemsLimit: [false, Number, Infinity]\n    infiniteTrigger: [false, Number, .9]\n    infiniteRateLimit: [false, Number, 1]\n    infiniteStep: [false, Number, 10]\n    initPage: [false, Number, 1]\n    maxSubscriptions: [false, Number, 20]\n    navTemplate: [false, String, \"_pagesNavCont\"]\n    onDeniedSetting: [false, Function, (k, v, e) -> console?.log \"Changing #{k} not allowed.\"]\n    pageCountFrequency: [false, Number, 10000]\n    pageSizeLimit: [false, Number, 60]\n    pageTemplate: [false, String, \"_pagesPageCont\"]\n    rateLimit: [false, Number, 1]\n    routeSettings: [false, Match.Optional(Function), undefined]\n    scrollBoxSelector: [ String, undefined ]\n    table: [false, Match.OneOf(Boolean, Object), false]\n    tableItemTemplate: [false, String, \"_pagesTableItem\"]\n    tableTemplate: [false, String, \"_pagesTable\"]\n    templateName: [false, Match.Optional(String), undefined] #Defaults to collection name\n  \n  # Prototype variables (shared between instances)\n  \n  _nInstances: 0\n  collections: {}\n  instances: {}\n  \n  methods:\n    \n    \"CountPages\": (sub) ->\n      n = sub.get \"nPublishedPages\"\n      return n  if n?\n\n      n = Math.ceil @Collection.find(\n        $and: [\n          sub.get(\"filters\"),\n          sub.get(\"realFilters\") or {}\n        ]\n      ).count() / (sub.get \"perPage\")\n      n or 1\n    \n    \"Set\": (k, v, sub) ->\n      if !@settings[k]?\n        @error \"invalid-option\", \"Invalid option name: #{k}.\"\n      check k, String\n      check v, @settings[k][1]\n      check sub, Match.Where (sub) ->\n        sub.connection?.id?\n\n      if !@availableSettings[k] or (_.isFunction(@availableSettings[k]) and !@availableSettings[k] v, sub)\n        @error \"forbidden-option\", \"Changing #{k} not allowed.\"\n      \n      changes = 0\n      if v?\n        changes = @_set k, v, cid: sub.connection.id\n      else if !_.isString k\n        for _k, _v of k\n          changes += @set _k, _v, cid: sub.connection.id\n      changes\n    \n    \"Unsubscribe\": ->\n      cid = arguments[arguments.length - 1].connection.id\n      subs = {}\n      for k, sub of @subscriptions\n        continue  if k in [\"length\", \"order\"]\n        if sub.connection.id is cid\n          sub.stop()\n          delete @subscriptions[k]\n      @subscriptions.length = 0\n      true\n  \n  constructor: (collection, settings = {}) ->\n    unless @ instanceof Meteor.Pagination\n      throw new Meteor.Error \"missing-new\", \"The Meteor.Pagination instance has to be initiated with `new`\"\n    \n    # Instance variables\n    \n    @init = @beforeFirstReady = true\n    @debug ?= (PAGES_DEBUG? and PAGES_DEBUG) or process?.env.PAGES_DEBUG\n    @subscriptions = length: 0, order: []\n    @userSettings = {}\n    @_currentPage = 1\n\n    # Setup\n\n    @setCollection collection\n    @setInitial settings\n    @setDefaults()\n    @setRouter()\n    @[(if Meteor.isServer then \"server\" else \"client\") + \"Init\"]()\n    @registerInstance()\n    @\n    \n  error: (code, msg) ->\n    msg = code  if !code?\n    throw new Meteor.Error code, msg\n\n  # Server initialisation\n  \n  serverInit: ->\n    @setMethods()\n    self = @\n    \n    # Remove the per-connection settings when a client disconnects from the server\n    \n    Meteor.onConnection (connection) =>\n      connection.onClose =>\n        delete @userSettings[connection.id]\n        \n    # Publish the collection that we're paginating, taking a page number as a parameter.\n        \n    Meteor.publish @id, (page) ->\n      self.publish.call self, page, @\n  \n  # Client initialisation\n  \n  clientInit: ->\n    @requested = {}\n    @received = {}\n    @queue = []\n    @nextPageCount = @now()\n    @groundDB = Package[\"ground:db\"]?\n    if @infinite\n      @sess \"limit\", 10\n      @lastOffsetHeight = 0\n    if @maxSubscriptions < 1\n      @maxSubscriptions = 1\n    @setTemplates()\n    Tracker.autorun =>\n      #@log \"Status changed\"\n      Meteor.status()\n      Meteor.userId?()\n      @countPages()\n      @reload()\n    @templateName ?= @name\n    Template[@templateName].onRendered =>\n      @setInfiniteTrigger() if @infinite\n  \n  #Stops all subscriptions and reloads the current page, provided it's available and @resetOnReload isn't true.\n  \n  reload: _.throttle ->\n    #@log \"Reloading\"\n    @unsubscribe()\n    @countPages (total) =>\n      p = @currentPage()\n      p = 1  if (not p?) or @resetOnReload or p > total\n      @sess \"currentPage\", false\n      @sess \"currentPage\", p\n  , 1000, trailing: false\n  \n  unsubscribe: (page, cid) ->\n    return  if @beforeFirstReady\n    #@log \"Unsubscribing #{page} #{cid}\"\n    if !page?\n      for k, sub of @subscriptions\n        continue  if k in [\"length\", \"order\"]\n        sub.stop()\n        delete @subscriptions[k]\n      @subscriptions.length = 0\n      @initPage = null\n      @requested = {}\n      @received = {}\n      @queue = []\n    else if Meteor.isServer\n      check cid, String\n      if @subscriptions[cid]?[page]\n        @subscriptions[cid][page].stop()\n        delete @subscriptions[cid][page]\n        @subscriptions.length--\n    else if @subscriptions[page]\n      #@log \"Stopping sub #{page}\"\n      @subscriptions[page].stop()\n      delete @subscriptions[page]\n      delete @requested[page]\n      delete @received[page]\n      @subscriptions.order = _.without @subscriptions.order, Number page\n      @subscriptions.length--\n    true\n  \n  setDefaults: ->\n    for k, v of @settings\n      if v[2]?\n        @[k] ?= v[2]\n  \n  syncSettings: (cb) ->\n    S = {}\n    for k, v of @settings\n      if v[0]\n        S[k] = @[k]\n    @set S, if cb? then {cb: cb.bind(@)} else null\n  \n  # Creates server-side methods for this pagination *instance* by prefixing them with our unique id\n  \n  setMethods: ->\n    nm = {}\n    self = @\n    for n, f of @methods\n      nm[@getMethodName n] = ((f) ->\n        ->\n          arg = (v for k, v of arguments)\n          arg.push @\n          @get = _.bind ((self, k) -> self.get k, @connection.id), @, self\n          r = f.apply self, arg\n          r\n      )(f)\n      \n    Meteor.methods nm\n  \n  # Get's the server's method name for this pagination instance\n  \n  getMethodName: (name) ->\n    \"#{@id}/#{name}\"\n  \n  # Calls this instance's version of a given server method (first argument).\n  # If the last argument is a function callback, it's bound to this instance\n    \n  call: (args...) ->\n    check args, Array\n    if args.length < 1\n      @error \"method-name-missing\", \"Method name not provided in a method call.\"\n    args[0] = @getMethodName args[0]\n    last = args.length - 1\n    if _.isFunction args[last]\n      args[last] = args[last].bind @\n    Meteor.call.apply @, args\n  \n  # Sets/gets a session variable for this instance\n  \n  sess: (k, v) ->\n    return  if !Session?\n    k = \"#{@id}.#{k}\"\n    if arguments.length is 2\n      Session.set k, v\n    else\n      Session.get k\n      \n  # Gets a given setting\n  #      \n  # When there's a connection id we store this setting on a per-connection basis, otherwise we just\n  # set the setting on this pagination instance\n\n  get: (setting, connectionId) ->\n    @userSettings[connectionId]?[setting] ? @[setting]\n  \n # Sets the options for this instance\n    \n  set: (k, opts...) ->\n    ch = 0\n    switch opts.length\n      when 0\n        # set <object> (set the value of each property in object)\n        if _.isObject k\n          for _k, _v of k\n            ch += @_set _k, _v\n      when 1\n        if _.isObject k\n          # set <object>, callback\n          # We wrap the callback and associate with each property of the object being set\n          if _.isFunction opts[0]\n            opts[0] = cb: opts[0]\n          for _k, _v of k\n            ch += @_set _k, _v, opts[0]\n        else\n          # set <name>, <value>\n          check k, String\n          ch = @_set k, opts[0]\n      when 2\n         # set <name>, <value>, [<callback fn>]\n        if _.isFunction opts[1]\n          opts[1] = cb: opts[1]\n        ch = @_set k, opts[0], opts[1]\n      when 3\n        check opts[1], Object\n        check opts[2], Function\n        opts[2] = cb: opts[2]\n        ch = @_set k, opts[1], opts[2]\n    if Meteor.isClient and ch\n      @reload()\n    ch\n\n  setInitial: (settings) ->\n    @setInitDone = false\n    @set settings\n    @setInitDone = true\n\n  #Converts a regular expression into a query object that can be sent via methods to the server\n\n  sanitizeRegex: (v) ->\n    if _.isRegExp v\n      v = v.toString()\n      lis = v.lastIndexOf(\"/\")\n      v = $regex: v[1 ... lis], $options: v[1 + lis .. ]\n    v\n\n  #Sanitizes all regular expressions within an object using ::sanitizeRegex()\n  \n  sanitizeRegexObj: (obj) ->\n    if _.isRegExp obj\n      return @sanitizeRegex obj\n    for k, v of obj\n      if _.isRegExp v\n        obj[k] = @sanitizeRegex v\n      else if \"object\" is typeof v\n        obj[k] = @sanitizeRegexObj v\n    obj\n\n  # Sets a specific option\n      \n  _set: (k, v, opts = {}) ->\n    check k, String\n    ch = 1\n    \n    # Check that we're the server, or that we're being initialised, or that this setting can be changed\n    # after initialization, or that the setting doesn't yet exist on this instance.\n    \n    if Meteor.isServer or !@[k]? or @settings[k]?[0] or opts.init\n    \n      # Check the type of the value against the @settings array\n      if @settings[k]?[1]? and @settings[k]?[1] isnt true\n        check v, @settings[k][1]\n      \n      @sanitizeRegexObj v\n      \n      # Set the parameter on this instance (client)  \n      \n      oldV = @get k, opts?.cid\n\n      return 0  if @valuesEqual v, oldV\n\n      if Meteor.isClient\n        @[k] = v\n        if @setInitDone\n          # Change the setting for the corresponding instance on the server\n          @call \"Set\", k, v, (e, r) ->\n            if e\n              @[k] = oldV\n              return @onDeniedSetting.call @, k, v, e\n            opts.cb? ch\n      else\n        # When there's a connection id we store this setting on a per-connection basis, otherwise we just\n        # set the setting on this pagination instance\n        if opts.cid\n          if ch?\n            @userSettings[opts.cid] ?= {}\n            @userSettings[opts.cid][k] = v\n        else\n          @[k] = v\n        \n        opts.cb? ch\n    else\n      @onDeniedSetting.call @, k, v\n    ch\n    \n  valuesEqual: (v1, v2) ->\n    if _.isFunction v1\n      _.isFunction(v2) and v1.toString() is v2.toString()\n    else\n      _.isEqual v1, v2\n  \n  # \n  \n  setId: (name) ->\n    if @templateName\n      name = @templateName\n    while name of Pages::instances\n      n = name.match /[0-9]+$/\n      if n?\n        name = name[0 ... name.length - n[0].length] + (parseInt(n) + 1)\n      else\n        name = name + \"2\"\n    @id = \"pages_\" + name\n    @name = name\n  \n  #\n  \n  registerInstance: ->\n    Pages::_nInstances++\n    Pages::instances[@name] = @\n  \n  # Set the collection on which this instance operates. Creates a new one if a name is passed in.\n  \n  setCollection: (collection) ->\n    if typeof collection is \"object\"\n      Pages::collections[collection._name] = collection\n      @Collection = collection\n    else\n      try\n        @Collection = new Mongo.Collection collection\n        Pages::collections[collection] = @Collection\n      catch e\n        @Collection = Pages::collections[collection]\n        @Collection instanceof Mongo.Collection or @error \"collection-inaccessible\", \"The '#{collection}' collection \n        was created outside of <Meteor.Pagination>. Pass the collection object\n        instead of the collection's name to the <Meteor.Pagination> constructor.\"\n    \n    @setId @Collection._name\n    \n    # Create a collection based on the instance's unique id\n    \n    # @PaginatedCollection = new Mongo.Collection @id\n  \n  linkTo: (page)->\n    if Router.current()?.params\n      params = Router.current().params\n      params.page = page\n      Router.routes[\"#{@name}_page\"].path params\n  \n  setRouter: ->\n    if @router is \"iron-router\"\n      if @route.indexOf(\":page\") is -1\n        if @route[0] isnt \"/\"\n          @route = \"/\" + @route\n        if @route[@route.length - 1] isnt \"/\"\n          @route += \"/\"\n        pr = @route = \"#{@route}:page\"\n      t = @routerTemplate\n      l = @routerLayout ? undefined\n      self = @\n      init = true\n      \n      Router.map ->\n        unless self.infinite\n        \n          # Create a route that takes a page number\n         \n          @route \"#{self.name}_page\",\n            path: pr\n            template: t\n            layoutTemplate: l\n            onBeforeAction: ->\n              page = parseInt @params.page\n              if self.init\n                self.sess \"oldPage\", page\n                self.sess \"currentPage\", page\n              if self.routeSettings?\n                self.routeSettings @\n              Tracker.nonreactive =>\n                self.onNavClick page\n              @next()               \n        \n        # Create one or more routes for the home (first) page\n              \n        if self.homeRoute\n          if _.isString self.homeRoute\n            self.homeRoute = [self.homeRoute]\n          for hr, k in self.homeRoute\n            @route \"#{self.name}_home#{k}\",\n              path: hr\n              template: t\n              layoutTemplate: l\n              onBeforeAction: ->\n                if self.routeSettings?\n                  self.routeSettings @\n                if self.init\n                  self.sess \"oldPage\", 1\n                  self.sess \"currentPage\", 1\n                @next()\n                      \n      # If using FastRender, set it up for these routes\n                \n      if Meteor.isServer and @fastRender\n        self = @\n        FastRender.route pr, (params) ->\n          @subscribe self.id, parseInt params.page\n        FastRender.route @homeRoute, ->\n          @subscribe self.id, 1  \n\n  isEmpty: ->\n    @isReady() and @Collection.find(_.object [[\"_#{@id}_i\", 0]]).count() is 0\n  \n  setPerPage: ->\n    @perPage = if @pageSizeLimit < @perPage then @pageSizeLimit else @perPage\n  \n  setTemplates: ->\n    name = @templateName or @name\n    if @table and @itemTemplate is \"_pagesItemDefault\"\n      @itemTemplate = @tableItemTemplate\n    \n    for i in [@navTemplate, @pageTemplate, @itemTemplate, @tableTemplate]\n      tn = @id + i\n      Template[tn] = new Blaze.Template \"Template.#{tn}\", Template[i].renderFunction\n      Template[tn].__eventMaps = Template[tn].__eventMaps.concat Template[i].__eventMaps\n      helpers = pagesData: @\n      _.each Template[i].__helpers, (helper, name) =>\n        if name[0] is \" \"\n          helpers[name.slice(1)] = _.bind helper, @ \n      Template[tn].helpers helpers\n      \n    # Set our helpers on the main template set for this pagination  \n      \n    Template[name].helpers\n      pagesData: @\n      pagesNav: Template[@id + @navTemplate]\n      pages: Template[@id + @pageTemplate]\n  \n  # Get the number of pages from the server\n      \n  countPages: _.throttle (cb) ->\n    #@log \"Counting pages\"\n    if !Meteor.status().connected and Package[\"ground:db\"]?\n      n = @Collection.findOne({}, {sort: _.object [[\"_#{@id}_p\", -1]]})?[\"_#{@id}_p\"] or 0\n      @setTotalPages n\n      cb? n\n    else\n      @call \"CountPages\", (e, r) =>\n        throw e  if e?\n        @setTotalPages r\n        now = @now()\n        if @nextPageCount < now\n          @nextPageCount = now + @pageCountFrequency\n          setTimeout _.bind(@countPages, @), @pageCountFrequency\n        cb? r\n  , 1000\n\n  setTotalPages: (n) ->\n    @sess \"totalPages\", n\n    if @sess(\"currentPage\") > n\n      @sess \"currentPage\", 1\n\n  # Makes sure the number of simultaneously active subscriptions is less then @maxSubscriptions\n\n  enforceSubscriptionLimit: (cid) ->\n    if Meteor.isServer\n      check cid, String\n      if @subscriptions[cid]?.length >= @maxSubscriptions\n        return @error \"subscription-limit-reached\", \"Subscription limit reached. Unable to open a new subscription.\"\n    else\n      while @subscriptions.length >= @maxSubscriptions\n        @unsubscribe @subscriptions.order[0]\n      true\n  \n  # Called from the Meteor.publish call made during init, this publishes the paginated collection\n  #\n  # \"this\" will be the pagination instance\n  # \"page\" is the page number to publish\n  # \"sub\" is the publish handler object which (the \"this\" object when the function passed to Meteor.publish is called)\n  \n  publish: (page, sub) ->\n    check page, Number\n    check sub, Match.Where (s) ->\n      s.ready?\n    cid = sub.connection.id\n    init = true\n\n    #@log \"Publishing page #{page}\"\n\n    @subscriptions[sub.connection.id] ?= length: 0\n\n    @enforceSubscriptionLimit cid\n\n    # Create get and set functions for this specific connection (the settings will end up in the @userSettings,\n    # stored in an object indexed under the collection id)\n    \n    get = sub.get = _.bind ((cid, k) -> @get k, cid), @, cid\n    set = sub.set = _.bind ((cid, k, v) -> @set k, v, cid: cid), @, cid\n    \n    query = _.bind ((sub, get, set) ->\n\n      delete @userSettings[cid]?.realFilters\n      delete @userSettings[cid]?.nPublishedPages\n      \n      @setPerPage()\n      \n      skip = (page - 1) * get \"perPage\"\n      skip = 0 if skip < 0\n      \n      filters = get \"filters\"\n      \n      options = \n        sort: get \"sort\"\n        fields: get \"fields\"\n        skip: skip\n        limit: get \"perPage\"\n      \n      # Call the authentication function if it's supplied\n      \n      if @auth?\n        r = @auth.call @, skip, sub\n        if !r\n          set \"nPublishedPages\", 0\n          sub.ready()\n          return @ready()\n        else if _.isNumber r\n          set \"nPublishedPages\", r\n          if page > r\n            sub.ready()\n            return @ready()\n        else if _.isArray(r) and r.length is 2\n          if _.isFunction r[0].fetch\n            c = r\n          else\n            filters = r[0]\n            options = r[1]\n        else if _.isFunction r.fetch\n          c = r\n      \n      if !EJSON.equals({}, filters) and !EJSON.equals(get(\"filters\"), filters)\n        set \"realFilters\", filters\n      \n      # Get a cursor to the base collection\n      #@log \"Publishing\", filters, options\n      c or @Collection.find filters, options\n    \n    ), @, sub, get, set\n\n    c = query()\n\n    #watchCollection: ->\n    #c = @Collection.find()\n    \n    self = @\n    \n    # We need to call sub's added callback when a new document is added, however\n    # for the purposes of pagination we also need to include the index of each document.\n    #\n    # Furthermore, an added document might increase the index of other documents on this page.\n    #\n    # We therefore need to use the observe method to handle this.\n    \n    handle = c.observe\n      addedAt: _.bind ((sub, query, doc, at) ->\n        return  if init\n        #@log \"#{doc.id} added at #{page}, #{at}\"\n        doc[\"_#{@id}_p\"] = page\n        doc[\"_#{@id}_i\"] = at\n        id = doc._id\n        delete doc._id  \n        # Add to @Collection\n        query().forEach (o, i) =>\n          if i is at\n            sub.added @Collection._name, id, doc\n          else\n            sub.changed @Collection._name, o._id, _.object [[\"_#{@id}_i\", i]]\n      ), @, sub, query\n    \n    # For the other cases the more efficient observeChanges will suffice...\n      \n    handle2 = c.observeChanges\n      movedBefore: _.bind ((sub, query, id, before) ->\n        #@log \"#{id} moved before #{before}\"\n        query().forEach (o, i) =>\n          sub.changed @Collection._name, o._id, _.object [[\"_#{@id}_i\", i]]\n      ), @, sub, query\n      \n      changed: _.bind ((sub, query, id, fields) ->\n        #@log \"#{id} changed\"\n        try\n          sub.changed @Collection._name, id, fields\n        catch e\n      ), @, sub, query\n      \n      removed: _.bind ((sub, query, id) ->\n        #@log \"#{id} removed\"\n        try\n          sub.removed @Collection._name, id\n          query().forEach (o, i) =>\n            sub.changed @Collection._name, o._id, _.object [[\"_#{@id}_i\", i]]\n        catch e\n      ), @, sub, query\n    \n    # Add the documents from this query \n    \n    n = 0\n    c.forEach (doc, index, cursor) =>\n      n++\n      doc[\"_#{@id}_p\"] = page\n      doc[\"_#{@id}_i\"] = index\n      sub.added @Collection._name, doc._id, doc\n\n    init = false\n\n    sub.onStop _.bind ((page) ->\n      #@log \"#{sub.connection.id}: page #{page} subscription stopped\"\n      delete @subscriptions[sub.connection.id][page]\n      @subscriptions[sub.connection.id].length--\n      handle.stop()\n      handle2.stop()\n    ), @, page\n    @subscriptions[sub.connection.id][page] = sub\n    @subscriptions[sub.connection.id].length++\n    sub.ready()\n  \n  # Sets the state of the current page as \"loading\" (ready = false)  \n  \n  loading: (p) ->\n    if !@fastRender and p is @currentPage()\n      @sess \"ready\", false\n  \n  now: ->\n    (new Date()).getTime()\n  \n  log: ->\n    a = [\"Pages: #{@name} -\"]\n    for i in arguments\n      a.push i\n    @debug and console.log.apply console, a\n  \n  logRequest: (p) ->\n    @timeLastRequest = @now()\n    @requesting = p\n    @requested[p] = 1\n  \n  logResponse: (p) ->\n    delete @requested[p]\n    @received[p] = 1\n  \n  clearQueue: ->\n    @queue = []\n  \n  neighbors: (page) ->\n    n = []\n    if @dataMargin is 0 or @maxSubscriptions < 2\n      return n\n    maxMargin = Math.floor((@maxSubscriptions - 1) / 2)\n    for d in [1 .. _.min [maxMargin, @dataMargin]]\n      np = page + d\n      if np <= @sess \"totalPages\"\n        n.push np\n      pp = page - d\n      if pp > 0\n        n.push pp\n    n\n  \n  queueNeighbors: (page) ->\n    for p in @neighbors page\n      @queue.push p  if !@received[p] and !@requested[p] and p not in @queue\n  \n  paginationNavItem: (label, page, disabled, active = false) ->\n    p: label\n    n: page\n    active: if active then \"active\" else \"\"\n    disabled: if disabled then \"disabled\" else \"\"\n  \n  navigationNeighbors: ->\n    page = @currentPage()\n    total = @sess \"totalPages\"\n    from = page - @paginationMargin\n    to = page + @paginationMargin\n    if from < 1\n        to += 1 - from\n        from = 1\n    if to > total\n        from -= to - total\n        to = total\n    from = 1 if from < 1\n    to = total if to > total\n    n = []\n    if @navShowFirst or @navShowEdges\n      n.push @paginationNavItem \"Â«\", 1, page == 1\n    n.push @paginationNavItem \"<\", page - 1, page == 1\n    for p in [from .. to]\n      n.push @paginationNavItem p, p, page > total, p is page\n    n.push @paginationNavItem \">\", page + 1, page >= total\n    if @navShowLast or @navShowEdges\n      n.push @paginationNavItem \"Â»\", total, page >= total\n    for i, k in n\n      n[k]['_p'] = @\n    n\n  \n  onNavClick: (n) ->\n    if n <= @sess(\"totalPages\") and n > 0\n      Tracker.nonreactive =>\n        cp = @sess \"currentPage\"\n        if @received[cp]\n          @sess \"oldPage\", cp\n      @sess \"currentPage\", n\n  \n  setInfiniteTrigger: ->\n    @scrollBoxSelector = @scrollBoxSelector || window\n    @scrollBox = $(@scrollBoxSelector)\n    @scrollBox.scroll _.bind (\n      _.throttle ->\n        t = @infiniteTrigger\n        oh = @scrollBox[0].scrollHeight\n        return  if @lastOffsetHeight? and @lastOffsetHeight > oh\n        @lastOffsetHeight = oh\n        if t > 1\n          l = oh - t\n        else if t > 0\n          l = oh * t\n        else\n          return\n\n        if (@scrollBox.scrollTop() + @scrollBox[0].offsetHeight >= l)\n          @sess(\"limit\", @sess(\"limit\") + @infiniteStep)\n          \n          ###\n          if @lastPage < @sess \"totalPages\"\n            console.log \"i want page #{@lastPage + 1}\"\n            @sess(\"currentPage\", @lastPage + 1)\n          ###\n          \n      , @infiniteRateLimit * 1000\n    ), @\n  \n  checkQueue: _.throttle ->\n    #@log \"Checking queue\"\n    cp = @currentPage()\n    neighbors = @neighbors cp\n    \n    # If we haven't yet received the current page then clear all the other subscriptions and requests\n    # and get the current page\n    \n    if !@received[cp]\n      #@log \"Haven't yet received the current page (#{cp}).\"\n      @clearQueue()\n      @requestPage cp\n      cp = String cp\n      for k, v of @requested\n        if k isnt cp\n          if @subscriptions[k]?\n            @subscriptions[k].stop()\n            delete @subscriptions[k]\n            @subscriptions.length--\n          delete @requested[k]\n    \n    # If we do have the current page then queue the neighbours\n    \n    else if @queue.length\n      #@log \"Current page (#{cp}) already received.\"\n      while @queue.length > 0\n        i = @queue.shift()\n        if i in neighbors\n          #@log neighbors\n          @requestPage i\n          break\n  , 500\n  \n  currentPage: ->\n    if Meteor.isClient and @sess(\"currentPage\")?\n      @sess \"currentPage\"\n    else\n      @_currentPage\n  \n  isReady: ->\n    @sess \"ready\"\n  \n  ready: (p) ->\n    if p is true or p is @currentPage() and Session?\n      @sess \"ready\", true\n  \n  checkInitPage: ->\n    if @init and !@initPage \n      if @router\n        Router.current()?.route?.getName()\n        try\n          @initPage = parseInt(Router.current().route.params(location.href)?.page) or 1\n        catch\n          return\n      else\n        @initPage = 1\n    @init = false\n    @sess \"oldPage\", @initPage\n    @sess \"currentPage\", @initPage\n  \n  getPage: (page) ->\n    if Meteor.isClient\n      page = @currentPage()  if !page?\n      page = parseInt page\n      return  if page is NaN\n      total = @sess \"totalPages\"\n      return @ready true  if total is 0\n      \n      # Request data for the page\n      \n      if page <= total\n        @requestPage page\n        @queueNeighbors page\n        @checkQueue()\n      \n      # Return the content of this page \n      #\n      # The contents will be updated (as will the page) as data arrives from the server\n      \n      if @infinite\n        n = @Collection.find({},\n          fields: @fields\n          sort: @sort\n        ).count()\n        c = @Collection.find({},\n          fields: @fields\n          sort: @sort\n          skip: if n > @infiniteItemsLimit then n - @infiniteItemsLimit else 0\n          limit: @sess(\"limit\") or @infiniteItemsLimit\n        )\n      else\n        c = @Collection.find(\n          _.object([\n            [\"_#{@id}_p\", page]\n          ]),\n          fields: @fields\n          sort: _.object([\n            [\"_#{@id}_i\", 1]\n          ])\n        )\n        c.observeChanges\n          added: =>\n            @countPages()\n          removed: =>\n            ##########\n            ##########\n            ### !! ###\n            ##########\n            ##########\n            @requestPage @sess \"currentPage\"\n            @countPages()\n      \n      c.fetch()\n  \n  # Subscribes to the given page\n  \n  requestPage: (page) ->\n    return  if !page or @requested[page] or @received[page]\n    @log \"Requesting page #{page}\"\n    @logRequest page\n    if !Meteor.status().connected and @groundDB\n      if @Collection.findOne(_.object [[\"_#{@id}_p\", page]])\n        @onPage page\n      else\n        setTimeout (_.bind (page) ->\n          if @currentPage() is page and !@received[page]\n            delete @requested[page]\n            @requestPage page\n        , @, page)\n        , 500\n    else\n      @enforceSubscriptionLimit()\n      Meteor.defer _.bind ((page) ->\n        #@log \"subscribing to page #{page}\"\n        @subscriptions[page] = Meteor.subscribe @id, page,\n          onReady: _.bind (page) ->\n            @onPage page\n          , @, page\n          onError: (e) =>\n            if e.error is \"subscription-limit-reached\"\n              setTimeout (_.bind (page) ->\n                if @currentPage() is page and !@received[page]\n                  delete @requested[page]\n                  @requestPage page\n              , @, page)\n              , 500\n            else\n              @error e.message\n        @subscriptions.order.push page\n        @subscriptions.length++\n        #@log \"Number of subscriptions: #{@subscriptions.length}\"\n      ), @, page\n  \n  # Called when a page has been received\n  \n  onPage: (page) ->\n    @log \"Received page #{page}\"\n    @beforeFirstReady = false\n    @logResponse page\n    @ready page\n    if @infinite\n      @lastPage = page\n    @countPages()\n    @checkQueue()\n\nMeteor.Pagination = Pages\n"]}