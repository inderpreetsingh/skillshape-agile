{"version":3,"sources":["meteor://ðŸ’»app/packages/menway_jquery-datatables/packages/menway_jquery-datatables.js"],"names":[],"mappingsfile":"/packages/menway_jquery-datatables.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/mixins/Base.mixin.coffee.js                                             //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n\n/*\n  ```coffeescript\n    class Whatever extends Component\n      @extend DataTableMixins.Base\n  ```\n */\n\n/*\n  ```coffeescript\n    class Whatever extends Component\n      @extend DataTableMixins.Base\n      constructor: ( context = {} ) ->\n        @data.instanceProperty = @instanceProperty\n        super\n  ```\n */\n                    \n\nDataTableMixins = {\n  Base: {\n    extended: function() {\n      if (Meteor.isServer) {\n        this.include({\n          defaults: {}\n        });\n      }\n      if (Meteor.isClient) {\n        return this.include({\n          defaults: {\n            destroy: true,\n            jQueryUI: false,\n            autoWidth: true,\n            deferRender: false,\n            scrollCollapse: false,\n            paginationType: \"full_numbers\",\n            dom: \"<\\\"datatable-header\\\"fl><\\\"datatable-scroll\\\"rt><\\\"datatable-footer\\\"ip>\",\n            language: {\n              search: \"_INPUT_\",\n              lengthMenu: \"<span>Show :</span> _MENU_\",\n              processing: \"Loading\",\n              paginate: {\n                first: \"First\",\n                last: \"Last\",\n                next: \">\",\n                previous: \"<\"\n              }\n            }\n          },\n          prepareOptions: function() {\n            if (!this.options) {\n              this.data.options = {};\n              this.addGetterSetter(\"data\", \"options\");\n            }\n            this.options().component = this;\n            if (!this.isDomSource()) {\n              this.options().data = this.rows();\n              this.options().columns = this.columns ? this.columns() : [];\n              if (this.collection && this.query) {\n                this.options().serverSide = true;\n                this.options().processing = true;\n                this.options().ajaxSource = \"useful?\";\n                this.options().serverData = _.debounce(_.bind(this.fnServerData, this), 300);\n              }\n            }\n            return this.options(_.defaults(this.options(), this.defaults));\n          },\n          initializeDisplayLength: function() {\n            if ($().select2 && $(\"\" + (this.selector()) + \" .dataTables_length select\")) {\n              return $(\"\" + (this.selector()) + \" .dataTables_length select\").select2({\n                minimumResultsForSearch: \"-1\"\n              });\n            }\n          },\n          initializeFilterPlaceholder: function() {\n            if ($(\"\" + (this.selector()) + \" .dataTables_filter input[type=text]\")) {\n              return $(\"\" + (this.selector()) + \" .dataTables_filter input[type=text]\").attr(\"placeholder\", \"Type to filter...\");\n            }\n          },\n          initializeFooterFilter: function() {\n            var self;\n            if ($.keyup && $(\".\" + (this.selector()) + \" .dataTables_wrapper tfoot input\")) {\n              self = this;\n              return $(\".\" + (this.selector()) + \" .dataTables_wrapper tfoot input\").keyup(function() {\n                var target;\n                target = this;\n                return self.getDataTable().fnFilter(target.value, $(\".\" + (self.getSelector()) + \" .dataTables_wrapper tfoot input\").index(target));\n              });\n            }\n          },\n          isDomSource: function() {\n            if (this.dom) {\n              return this.dom();\n            } else {\n              return false;\n            }\n          }\n        });\n      }\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/mixins/Collection.mixin.coffee.js                                       //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nDataTableMixins.Collection = {\n  countCollection: Meteor.isClient ? new Meteor.Collection(\"datatable_count\") : \"datatable_count\",\n  collections: [],\n  getCollection: function(string) {\n    var collection, id, _ref;\n    _ref = DataTableComponent.collections;\n    for (id in _ref) {\n      collection = _ref[id];\n      if (collection instanceof Meteor.Collection) {\n        if (collection._name === string) {\n          return collection;\n          break;\n        }\n      }\n    }\n    return void 0;\n  },\n  extended: function() {\n    this.include({\n      prepareCollection: function() {\n        var collection;\n        if (Meteor.isClient) {\n          if (this.subscription) {\n            collection = DataTableComponent.getCollection(this.id());\n            this.log(\"collection\", collection);\n            if (collection) {\n              this.data.collection = collection;\n              this.log(\"collection:exists\", collection);\n            } else {\n              this.data.collection = new Meteor.Collection(this.id());\n              DataTableComponent.collections.push(this.data.collection);\n              this.log(\"collection:created\", this.data.collection);\n            }\n            this.addGetterSetter(\"data\", \"collection\");\n          }\n        }\n        if (Meteor.isServer) {\n          if (!this.data.collection) {\n            throw new Error(\"collection property is not defined\");\n          }\n          return this.addGetterSetter(\"data\", \"collection\");\n        }\n      },\n      collectionName: function() {\n        if (this.collection) {\n          return this.collection()._name;\n        } else {\n          return false;\n        }\n      },\n      prepareCountCollection: function() {\n        if (this.subscription) {\n          if (!this.countCollection) {\n            this.data.countCollection = DataTableComponent.countCollection;\n            return this.addGetterSetter(\"data\", \"countCollection\");\n          }\n        }\n      }\n    });\n    if (Meteor.isClient) {\n      return this.include({\n        getCount: function(collectionName) {\n          var countDoc;\n          if (this.subscription) {\n            countDoc = this.countCollection().findOne(collectionName);\n            if (countDoc && \"count\" in countDoc) {\n              return countDoc.count;\n            } else {\n              return 0;\n            }\n          }\n        },\n        totalCount: function() {\n          return this.getCount(this.collectionName());\n        },\n        filteredCount: function() {\n          return this.getCount(\"\" + (this.collectionName()) + \"_filtered\");\n        }\n      });\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/mixins/Columns.mixin.coffee.js                                          //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nDataTableMixins.Columns = {\n  extended: function() {\n    if (Meteor.isClient) {\n      return this.include({\n        prepareColumns: function() {\n          var column, columns, _i, _len;\n          if (!this.columns) {\n            this.data.columns = void 0;\n            this.addGetterSetter(\"data\", \"columns\");\n          }\n          columns = this.columns() || [];\n          for (_i = 0, _len = columns.length; _i < _len; _i++) {\n            column = columns[_i];\n            this.setDefaultCellValue(column);\n          }\n          return this.columns(columns);\n        },\n        setDefaultCellValue: function(column) {\n          Match.test(column.data, String);\n          Match.test(column.title, String);\n          if (!column.mRender) {\n            return column.mRender = function(data, type, row) {\n              var _name;\n              return row[_name = column.data] != null ? row[_name] : row[_name] = \"\";\n            };\n          }\n        }\n      });\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/mixins/Publish.mixin.coffee.js                                          //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nDataTableMixins.Publish = {\n  extended: function() {\n    if (Meteor.isServer) {\n      return this.include({\n        updateCount: function(args, added) {\n          var component, filtered, total;\n          if (added == null) {\n            added = false;\n          }\n          component = this;\n          if (args.initialized) {\n            total = component.collection().find(args.baseQuery).count();\n            component.log(\"\" + (component.subscription()) + \":count:total\", total);\n            filtered = component.collection().find(args.filteredQuery).count();\n            component.log(\"\" + (component.subscription()) + \":count:filtered\", filtered);\n            if (added) {\n              args.publish.added(component.countCollection(), args.collectionName, {\n                count: total\n              });\n              return args.publish.added(component.countCollection(), \"\" + args.collectionName + \"_filtered\", {\n                count: filtered\n              });\n            } else {\n              args.publish.changed(component.countCollection(), args.collectionName, {\n                count: total\n              });\n              return args.publish.changed(component.countCollection(), \"\" + args.collectionName + \"_filtered\", {\n                count: filtered\n              });\n            }\n          }\n        },\n        observer: function(args) {\n          var component;\n          component = this;\n          return this.collection().find(args.filteredQuery, args.options).observe({\n            addedAt: function(doc, index, before) {\n              component.updateCount(args);\n              args.publish.added(args.collectionName, doc._id, doc);\n              args.publish.added(component.collection()._name, doc._id, doc);\n              return component.log(\"\" + (component.subscription()) + \":added\", doc._id);\n            },\n            changedAt: function(newDoc, oldDoc, index) {\n              component.updateCount(args);\n              args.publish.changed(args.collectionName, newDoc._id, newDoc);\n              args.publish.changed(component.collection()._name, newDoc._id, newDoc);\n              return component.log(\"\" + (component.subscription()) + \":changed\", newDoc._id);\n            },\n            removedAt: function(doc, index) {\n              component.updateCount(args);\n              args.publish.removed(args.collectionName, doc._id);\n              args.publish.removed(component.collection()._name, doc._id);\n              return component.log(\"\" + (component.subscription()) + \":removed\", doc._id);\n            }\n          });\n        },\n        publish: function() {\n          var component;\n          component = this;\n          return Meteor.publish(component.subscription(), function(collectionName, baseQuery, filteredQuery, options) {\n            var args, countArgs, countHandle, handle, lastPage, query, queryMethod;\n            Match.test(baseQuery, Object);\n            Match.test(filteredQuery, Object);\n            Match.test(options, Object);\n            component.log(\"\" + (component.subscription()) + \":query:base\", baseQuery);\n            component.log(\"\" + (component.subscription()) + \":query:filtered\", filteredQuery);\n            component.log(\"\" + (component.subscription()) + \":options\", options);\n            if (_.isFunction(component.query())) {\n              queryMethod = _.bind(component.query(), this);\n              query = queryMethod(component);\n            } else {\n              query = component.query();\n            }\n            baseQuery = {\n              $and: [query, baseQuery]\n            };\n            filteredQuery = {\n              $and: [query, baseQuery]\n            };\n            args = {\n              publish: this,\n              initialized: false,\n              collectionName: collectionName,\n              baseQuery: baseQuery,\n              filteredQuery: filteredQuery,\n              options: options\n            };\n            handle = component.observer(args);\n            args.initialized = true;\n            component.updateCount(args, true);\n            args.publish.ready();\n            lastPage = component.collection().find(args.filteredQuery).count() - args.options.limit;\n            if (lastPage > 0) {\n              countArgs = _.clone(args);\n              countArgs.initialized = false;\n              countArgs.options.skip = lastPage;\n              countHandle = component.collection().find(countArgs.filteredQuery, countArgs.options).observe({\n                addedAt: function() {\n                  return component.updateCount(countArgs);\n                },\n                changedAt: function() {\n                  return component.updateCount(countArgs);\n                },\n                removedAt: function() {\n                  return component.updateCount(countArgs);\n                }\n              });\n              countArgs.initialized = true;\n            }\n            return args.publish.onStop(function() {\n              handle.stop();\n              if (countHandle) {\n                return countHandle.stop();\n              }\n            });\n          });\n        }\n      });\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/mixins/Query.mixin.coffee.js                                            //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nDataTableMixins.Query = {\n  extended: function() {\n    this.include({\n      prepareQuery: function() {\n        if (this.subscription || Meteor.isServer) {\n          if (!this.query) {\n            this.data.query = {};\n            return this.addGetterSetter(\"data\", \"query\");\n          }\n        }\n      }\n    });\n    if (Meteor.isClient) {\n      return this.include({\n        arrayToDictionary: function(array, key) {\n          var dict, obj, _i, _len;\n          dict = {};\n          for (_i = 0, _len = array.length; _i < _len; _i++) {\n            obj = array[_i];\n            if (obj[key] != null) {\n              dict[obj[key]] = obj;\n            }\n          }\n          return dict;\n        },\n        setQuery: function(query) {\n          if (this.subscription) {\n            if (!this.query) {\n              this.prepareQuery();\n            }\n            if (true) {\n              this.query(query);\n              return this.rendered();\n            }\n          }\n        },\n        prepareTableState: function() {\n          if (this.subscription) {\n            this.data.tableState = void 0;\n            return this.addGetterSetter(\"data\", \"tableState\");\n          }\n        },\n        getDataProp: function(key, index, data) {\n          key = \"\" + key + \"_\" + index;\n          return data[key].value;\n        },\n        mapColumns: function(index, data) {\n          return this.tableState().columns[this.getDataProp('mDataProp', index, data)] = {\n            mDataProp: this.getDataProp('mDataProp', index, data),\n            bRegex: this.getDataProp('bRegex', index, data),\n            bSearchable: this.getDataProp('bSearchable', index, data),\n            bSortable: this.getDataProp('bSortable', index, data),\n            sSearch: this.getDataProp('sSearch', index, data)\n          };\n        },\n        mapQuery: function(key, property, searchQuery) {\n          var obj;\n          if (property.bSearchable !== false) {\n            obj = {};\n            obj[key] = {\n              $regex: this.tableState().sSearch,\n              $options: 'i'\n            };\n            return searchQuery.$or.push(obj);\n          }\n        },\n        mapSortOrder: function(sortIndex, data) {\n          var propertyIndex, propertyName;\n          sortIndex = sortIndex - 1;\n          propertyIndex = this.getDataProp('iSortCol', sortIndex, data);\n          propertyName = this.getDataProp('mDataProp', propertyIndex, data);\n          switch (this.getDataProp('sSortDir', sortIndex, data)) {\n            case 'asc':\n              return this.tableState().sort[propertyName] = 1;\n            case 'desc':\n              return this.tableState().sort[propertyName] = -1;\n          }\n        },\n        mapTableState: function(aoData) {\n          var index, key, property, searchQuery, sortIndex, _i, _j, _ref, _ref1, _ref2, _results;\n          aoData = this.arrayToDictionary(aoData, 'name');\n          this.log('mapTableState:aoData', aoData);\n          this.tableState({\n            sEcho: aoData.sEcho.value || 1,\n            bRegex: aoData.bRegex.value || false,\n            columns: [],\n            iColumns: aoData.iColumns.value || 0,\n            iSortingCols: aoData.iSortingCols.value || 0,\n            sColumns: aoData.sColumns.value || \"\",\n            iDisplayLength: aoData.iDisplayLength.value || 10,\n            iDisplayStart: aoData.iDisplayStart.value || 0,\n            sSearch: aoData.sSearch.value || \"\"\n          });\n          for (index = _i = 0, _ref = this.tableState().iColumns - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {\n            this.mapColumns(index, aoData);\n          }\n          if (this.tableState().sSearch !== \"\") {\n            searchQuery = {\n              $or: []\n            };\n            _ref1 = this.tableState().columns;\n            for (key in _ref1) {\n              property = _ref1[key];\n              this.mapQuery(key, property, searchQuery);\n            }\n            if (this.query() === {}) {\n              this.tableState().query = searchQuery;\n            } else {\n              this.tableState().query = {\n                $and: [this.query(), searchQuery]\n              };\n            }\n          } else {\n            this.tableState().query = this.query();\n          }\n          if (this.tableState().iSortingCols > 0) {\n            this.tableState().sort = {};\n            _results = [];\n            for (sortIndex = _j = 1, _ref2 = this.tableState().iSortingCols; 1 <= _ref2 ? _j <= _ref2 : _j >= _ref2; sortIndex = 1 <= _ref2 ? ++_j : --_j) {\n              _results.push(this.mapSortOrder(sortIndex, aoData));\n            }\n            return _results;\n          }\n        }\n      });\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/mixins/Subscription.mixin.coffee.js                                     //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nDataTableMixins.Subscription = {\n  extended: function() {\n    this.include({\n      prepareSubscription: function() {\n        if (Meteor.isServer) {\n          this.data.id = this.data.subscription;\n          return this.addGetterSetter(\"data\", \"id\");\n        }\n      }\n    });\n    if (Meteor.isClient) {\n      return this.include({\n        setSubscriptionOptions: function() {\n          var options;\n          if (!this.subscriptionOptions) {\n            this.data.subscriptionOptions = void 0;\n            this.addGetterSetter(\"data\", \"subscriptionOptions\");\n          }\n          options = {\n            skip: this.tableState().iDisplayStart,\n            limit: this.tableState().iDisplayLength,\n            sort: this.tableState().sort\n          };\n          this.subscriptionOptions(options);\n          return this.log(\"subscriptionOptions\", this.subscriptionOptions());\n        },\n        setSubscriptionHandle: function() {\n          if (this.subscriptionHandle && this.subscriptionHandle().stop) {\n            this.subscriptionHandle().stop();\n          } else {\n            this.data.subscriptionHandle = void 0;\n            this.addGetterSetter(\"data\", \"subscriptionHandle\");\n          }\n          this.subscriptionHandle(Meteor.subscribe(this.subscription(), this.collectionName(), this.query(), this.tableState().query, this.subscriptionOptions()));\n          return this.log(\"subscriptionHandle\", this.subscriptionHandle());\n        },\n        setSubscriptionAutorun: function(fnCallback) {\n          Match.test(fnCallback, Object);\n          if (this.subscriptionAutorun && this.subscriptionAutorun().stop) {\n            this.subscriptionAutorun().stop();\n          } else {\n            this.data.subscriptionAutorun = void 0;\n            this.addGetterSetter(\"data\", \"subscriptionAutorun\");\n          }\n          this.subscriptionAutorun(Deps.autorun((function(_this) {\n            return function() {\n              var aaData, cursorOptions;\n              if (_this.subscriptionHandle && _this.subscriptionHandle().ready()) {\n                _this.log('fnServerdData:handle:ready', _this.subscriptionHandle().ready());\n                cursorOptions = {\n                  skip: 0\n                };\n                cursorOptions.limit = _this.tableState().iDisplayLength || 10;\n                if (_this.tableState().sort) {\n                  cursorOptions.sort = _this.tableState().sort;\n                }\n                if (!_this.cursor) {\n                  _this.data.cursor = void 0;\n                  _this.addGetterSetter(\"data\", \"cursor\");\n                }\n                _this.cursor(_this.collection().find(_this.tableState().query, cursorOptions));\n                aaData = _this.cursor().fetch();\n                _this.log('fnServerData:aaData', aaData);\n                return fnCallback({\n                  sEcho: _this.tableState().sEcho,\n                  iTotalRecords: _this.totalCount(),\n                  iTotalDisplayRecords: _this.filteredCount(),\n                  aaData: aaData\n                });\n              }\n            };\n          })(this)));\n          return this.log(\"subscriptionAutorun\", this.subscriptionAutorun());\n        }\n      });\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/mixins/Rows.mixin.coffee.js                                             //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nDataTableMixins.Rows = {\n  extended: function() {\n    if (Meteor.isClient) {\n      return this.include({\n        prepareRows: function() {\n          if (!this.data.rows) {\n            this.data.rows = [];\n          }\n          return this.addGetterSetter(\"data\", \"rows\");\n        },\n        getRows: function() {\n          if (this.$) {\n            return this.$().fnSettings().aoData || false;\n          } else {\n            return this.rows() || false;\n          }\n        },\n        getRowIndex: function(_id) {\n          var checkIndex, counter, index, row, rows, _i, _len;\n          index = false;\n          counter = 0;\n          rows = this.getRows();\n          checkIndex = function(row) {\n            if (row._data._id === _id) {\n              index = counter;\n            }\n            return counter++;\n          };\n          for (_i = 0, _len = rows.length; _i < _len; _i++) {\n            row = rows[_i];\n            checkIndex(row);\n          }\n          return index;\n        }\n      });\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/menway:jquery-datatables/lib/DataTables.component.coffee.js                                          //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar                    \n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nDataTableComponent = (function(_super) {\n  __extends(DataTableComponent, _super);\n\n  DataTableComponent.prototype.__name__ = \"DataTable\";\n\n  DataTableComponent.extend(DataTableMixins.Base);\n\n  DataTableComponent.extend(DataTableMixins.Collection);\n\n  DataTableComponent.extend(DataTableMixins.Query);\n\n  DataTableComponent.extend(DataTableMixins.Subscription);\n\n  if (Meteor.isClient) {\n    DataTableComponent.extend(DataTableMixins.Columns);\n    DataTableComponent.extend(DataTableMixins.Rows);\n    DataTableComponent.extend(ComponentMixins.ChooseTemplate);\n  }\n\n  if (Meteor.isServer) {\n    DataTableComponent.extend(DataTableMixins.Publish);\n  }\n\n  function DataTableComponent(context) {\n    if (context == null) {\n      context = {};\n    }\n    DataTableComponent.__super__.constructor.apply(this, arguments);\n    this.prepareSubscription();\n    this.prepareCollection();\n    this.prepareCountCollection();\n    this.prepareQuery();\n    if (Meteor.isClient) {\n      this.prepareColumns();\n      this.prepareRows();\n      this.prepareOptions();\n      this.prepareTableState();\n    }\n  }\n\n  DataTableComponent.prototype.rendered = function() {\n    return setTimeout(function() {\n      if (Meteor.isClient) {\n        this.$ = $(\"\" + (this.selector()) + \" table\").dataTable(this.options());\n        this.log(\"$\", this.$);\n        this.initializeFilterPlaceholder();\n        this.initializeDisplayLength();\n      }\n      return DataTableComponent.__super__.rendered.apply(this, arguments);\n    }, 0);\n  };\n\n  DataTableComponent.prototype.destroyed = function() {\n    if (Meteor.isClient) {\n      if ($(\".ColVis_collection\")) {\n        $(\".ColVis_collection\").remove();\n      }\n      if (this.subscriptionAutorun && this.subscriptionAutorun().stop) {\n        this.subscriptionAutorun().stop();\n      }\n    }\n    return DataTableComponent.__super__.destroyed.apply(this, arguments);\n  };\n\n  DataTableComponent.prototype.fnServerData = function(sSource, aoData, fnCallback, oSettings) {\n    if (Meteor.isClient) {\n      this.mapTableState(aoData);\n      this.setSubscriptionOptions();\n      this.setSubscriptionHandle();\n      return this.setSubscriptionAutorun(fnCallback);\n    } else {\n      throw new Error(\"fnServerData can only be called from the client.\");\n    }\n  };\n\n  return DataTableComponent;\n\n})(Component);\n\nif (Meteor.isClient) {\n  Template.DataTable.created = function() {\n    var dataTableInstance;\n    this.__component__ = this.__view__;\n    return dataTableInstance = new DataTableComponent(this);\n  };\n  $.fn.dataTableExt.oApi.fnGetComponent = function() {\n    var oSettings;\n    oSettings = this.fnSettings();\n    if (oSettings) {\n      if (oSettings.oInit) {\n        return oSettings.oInit.component || false;\n      }\n    }\n    throw new Error(\"DataTable Blaze component not instantiated\");\n  };\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}