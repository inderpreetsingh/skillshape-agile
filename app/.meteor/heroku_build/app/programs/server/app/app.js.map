{"version":3,"sources":["meteor://💻app/lib/collections/Category.js","meteor://💻app/lib/collections/ClaimOrder.js","meteor://💻app/lib/collections/ClassPricing.js","meteor://💻app/lib/collections/ClassSchedule.js","meteor://💻app/lib/collections/ClassType.js","meteor://💻app/lib/collections/Company.js","meteor://💻app/lib/collections/Demand.js","meteor://💻app/lib/collections/Evaluation.js","meteor://💻app/lib/collections/EvaluationType.js","meteor://💻app/lib/collections/Level.js","meteor://💻app/lib/collections/Media.js","meteor://💻app/lib/collections/Module.js","meteor://💻app/lib/collections/MonthlyPricing.js","meteor://💻app/lib/collections/Program.js","meteor://💻app/lib/collections/SLocation.js","meteor://💻app/lib/collections/School.js","meteor://💻app/lib/collections/Skill.js","meteor://💻app/lib/collections/SkillClass.js","meteor://💻app/lib/collections/SkillType.js","meteor://💻app/lib/collections/Subject.js","meteor://💻app/lib/collections/Tags.js","meteor://💻app/lib/collections/User.js","meteor://💻app/lib/collections/UserDemand.js","meteor://💻app/lib/router/Router.js","meteor://💻app/server/publish.js","meteor://💻app/server/smtp.js","meteor://💻app/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["category  = \"Category\";  // avoid typos, this string occurs many times.\n//\nCategory = new Mongo.Collection(category);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Category.attachSchema(new SimpleSchema({\n   name: {\n     type: String,\n     optional: true\n   },programId: {\n     type: String,\n     optional: true\n   }\n }));\n","claimOrder  = \"ClaimOrder\";  // avoid typos, this string occurs many times.\n//\nClaimOrder = new Mongo.Collection(claimOrder);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n ClaimOrder.attachSchema(new SimpleSchema({\n   name: {\n     type: String,\n     optional: true\n   },schoolId: {\n     type: String,\n     optional: true\n   },\n   createdAt:{\n     type: Date,\n     optional: true\n   },\n   remoteIP:{\n     type: String,\n     optional: true\n   }\n }));\nif(Meteor.isServer){\n  Meteor.startup(function () {\n    ClaimOrder._ensureIndex({ \"createdAt\": 1 }, { expireAfterSeconds: 3600 });\n  });\n}\nclaimRequest  = \"ClaimRequest\";  // avoid typos, this string occurs many times.\n//\nClaimRequest = new Mongo.Collection(claimRequest);\nClaimRequest.attachSchema(new SimpleSchema({\n  userId: {\n    type: String,\n    optional: true\n  },schoolId: {\n    type: String,\n    optional: true\n  },\n  currentUserId: {\n    type: String,\n    optional: true\n  },\n  schoolName:{\n    type: String,\n    optional: true\n  },\n  Status:{\n    type: String,\n    optional: true\n  }\n}));\n\nif(Meteor.isServer){\n  Meteor.publish(claimOrder, function (remoteIP) {\n    remoteIP = this.connection.clientAddress\n    return ClaimOrder.find({remoteIP:remoteIP})\n  });\n  Meteor.publish(claimRequest, function (userId) {\n    return ClaimRequest.find({userId:userId,Status:\"new\"})\n  });\n  Meteor.methods({\n    addClaimOrder: function(doc) {\n      doc.remoteIP = this.connection.clientAddress;\n      doc.createdAt = new Date();\n      console.log(doc);\n      return ClaimOrder.insert(doc);\n    },\n    removeClaimOrder: function(claimOrders) {\n      for(var i= 0 ; i < claimOrders.length; i++){\n        ClaimOrder.remove({_id:claimOrders[i]._id});\n      }\n      return true\n    },\n    addClaimRequest:function(doc){\n      this.unblock();\n      cr = ClaimRequest.insert(doc)\n      user = Meteor.users.findOne({_id:doc.userId})\n      current_user =  Meteor.users.findOne({_id:doc.currentUserId})\n      var fromEmail = \"admin@techmeetups.com\";\n      console.log(\"email send started\");\n      console.log(current_user);\n      if(current_user){\n        var toEmail = current_user.emails[0].address;\n        console.log(toEmail);\n        Email.send({\n            from: fromEmail,\n            to: toEmail,\n            replyTo: fromEmail ,\n            subject: \"Your School claim by other user\",\n            text: \"Hi ,\\nWe get claim request from  another user about your school\"+\n            \"\\nhe claim  : \"+Meteor.absoluteUrl()+\"schoolAdmin/\"+doc.schoolId+\"\\n\"+\n            \"\\nAdmin will contact you for further clarifications.\\n\"+\n            \"Thank you.\\n\"+\n            \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n            // + \"http://www.graphical.io/assets/img/Graphical-IO.png\"\n        });\n      }\n      var toEmail = user.emails[0].address;\n      Email.send({\n          from: fromEmail,\n          to: fromEmail,\n          replyTo: fromEmail ,\n          subject: \"skillshape claim request\",\n          text: \"Hi ,\\nWe get claim request from : (\"+toEmail+\")\"+\n          \"\\nhe claim  : \"+Meteor.absoluteUrl()+\"schoolAdmin/\"+doc.schoolId+\"\\n\"+\n          \"Thank you.\\n\"+\n          \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n          // + \"http://www.graphical.io/assets/img/Graphical-IO.png\"\n      });\n      Email.send({\n          from: fromEmail,\n          to: toEmail,\n          replyTo: fromEmail ,\n          subject: \"Thanks for claim request\",\n          text: \"Hi ,\"+toEmail+\n          \"\\nYour claim Schools is  : \"+Meteor.absoluteUrl()+\"schoolAdmin/\"+doc.schoolId+\"\\n\"+\n          \"We will getback to you soon.\\n\"+\n          \"Thank you.\\n\"+\n          \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n          // + \"http://www.graphical.io/assets/img/Graphical-IO.png\"\n      });\n      return true;\n    }\n  });\n}\n","\n\nclass_pricing  = \"ClassPricing\";  // avoid typos, this string occurs many times.\n//\nClassPricing = new Mongo.Collection(class_pricing);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n ClassPricing.attachSchema(new SimpleSchema({\n   packageName: {\n     type: String,\n     optional: true\n   },cost: {\n     type: Number,\n     optional: true\n   },\n   classTypeId :{\n     type: String,\n     optional: true\n   },noClasses:{\n     type: String,\n     optional: true\n   },start:{\n     type: String,\n     optional: true\n   },finish:{\n     type: String,\n     optional: true\n   },\n   schoolId: {\n       type: String,\n       optional: true\n   }\n }));\nif(Meteor.isServer){\n  Meteor.publish(\"ClassPricing\", function(schoolId){\n    return ClassPricing.find({schoolId:schoolId});\n  });\n  Meteor.methods({\n    addClassPricing:function(doc){\n      return ClassPricing.insert(doc)\n    },\n    updateClassPricing:function(id,doc){\n      return ClassPricing.update({_id:id}, {$set:doc});\n    },\n    removeClassPricing:function(id){\n      return ClassPricing.remove({_id:id});\n    }\n  });\n}\n","classSchedule = \"ClassSchedule\"; // avoid typos, this string occurs many times.\n//\nClassSchedule = new Mongo.Collection(classSchedule);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n\nClassSchedule.attachSchema(new SimpleSchema({\n  skillClassId: {\n    type: String,\n    optional: true\n  },\n  eventDate: {\n    type: Date,\n    optional: true\n  },\n  eventDay: {\n    type: String,\n    optional: true\n  },\n  eventStartTime: {\n    type: String,\n    optional: true\n  },\n  eventEndTime: {\n    type: String,\n    optional: true\n  },\n  locationId:{\n    type: String,\n    optional: true\n  }\n}));\nif(Meteor.isServer){\n\n  extandSchedule = function(skillClassIds,condition,date){\n    skillclass = SkillClass.find({_id:{$in:skillClassIds}}).fetch();\n    for(var k=0 ; k < skillclass.length; k++){\n      repeats = skillclass[k].repeats\n      if(repeats){\n        josn_repeats = JSON.parse(repeats);\n        \n        console.log(skillclass[k].isRecurring);\n        console.log(skillclass[k].isRecurring == \"true\");\n        if(josn_repeats && skillclass[k].isRecurring == \"true\" && josn_repeats.end_option == \"Never\"){\n          condition['skillClassId'] = skillclass[k]._id\n          count = ClassSchedule.find(condition).fetch().length\n          classScheduleItem = ClassSchedule.find({skillClassId:skillclass[k]._id},{sort:{eventDate:-1},limit:1}).fetch();\n          if(count < 1 && classScheduleItem.length > 0){\n            schedule_date = classScheduleItem[0].eventDate\n            start_date = moment(schedule_date);\n            repeat_on = josn_repeats.repeat_on\n            end_date = start_date.add(1, 'years')\n            start_date = moment(schedule_date);\n            var days = matchingDaysBetween(start_date,end_date, function(day) {\n            \treturn repeat_on.indexOf(day.format('dddd')) > -1; //test function\n            });\n            scheduleClass = []\n            repeat_details = josn_repeats.repeat_details\n            days.map(function(day) {\n              start_time = '00:00'\n              end_time = '00:00'\n              locationId = ''\n              for (var rd = 0; rd < repeat_details.length; rd++) {\n                if (day.format('dddd') == repeat_details[rd].day) {\n                    start_time = repeat_details[rd].start_time;\n                    end_time =  repeat_details[rd].end_time;\n                    locationId = repeat_details[rd].locationId\n                }\n              }\n              scheduleClass.push({\n                  skillClassId : skillclass[k]._id,\n                  eventStartTime:start_time,\n                  eventEndTime:end_time,\n                  eventDay:day.format(\"dddd\"),\n                  eventDate:day.toDate(),\n                  locationId:locationId\n              })\n            });\n            _.each(scheduleClass, function(doc) {\n                ClassSchedule.insert(doc);\n            })\n          }\n        }\n      }\n    }\n  }\n  Meteor.publish(\"ClassSchedule\", function(schoolId,current_date){\n    var date = '';\n    if(current_date){\n      date = new Date(current_date);\n    }else{\n      current_date = new Date();\n      date = new Date(current_date.getFullYear(),current_date.getMonth(),0);\n    }\n    school = School.findOne({$or:[{_id:schoolId},{slug:schoolId}]});\n    if(school){\n      skillclass = SkillClass.find({schoolId:school._id})\n      skillClassIds = skillclass.map(function(i){return i._id})\n      var lastDay = new Date(date);\n      lastDay.setDate(date.getDate() + 30);\n      date_condition = {\"eventDate\": {'$gte': date, '$lte': lastDay}}\n      var condition = {\"eventDate\": {'$gte': date, '$lte': lastDay},skillClassId:{$in :skillClassIds}};\n      /*console.log(condition);*/\n      extandSchedule(skillClassIds,date_condition,date);\n      return ClassSchedule.find(condition)\n    }else{\n      return []\n    }\n  });\n  Meteor.publish(\"ClassSchedulebyClassIds\", function(skillClassIds,current_date){\n    var date = '';\n    if(current_date){\n      date = new Date(current_date);\n    }else{\n      current_date = new Date();\n      date = new Date(current_date.getFullYear(),current_date.getMonth(),0);\n    }\n    var lastDay = new Date(date);\n    lastDay.setDate(date.getDate() + 30);\n    date_condition = {\"eventDate\": {'$gte': date, '$lte': lastDay}}\n    var condition = {\"eventDate\": {'$gte': date, '$lte': lastDay},skillClassId:{$in :skillClassIds}};\n    /*console.log(condition);*/\n    extandSchedule(skillClassIds,date_condition,date);\n    return ClassSchedule.find(condition)\n  });\n\n  Meteor.methods({\n    removeEvent: function(id) {\n      return ClassSchedule.remove({_id:id});\n    }\n  });\n\n}\nvar matchingDaysBetween = function(start, end, test) {\n  var days = [];\n  for (var day = moment(start); day.isBefore(end); day.add(1, 'd')) {\n    if (test(day)) {\n      days.push(moment(day)); // push a copy of day\n    }\n  }\n  return days;\n}\n\nbuildScheduleExpansion = function(sample_schedule,skillClassId,preStartDate){\n  scheduleClass = []\n  josn_repeats = JSON.parse(sample_schedule);\n  repeat_type = josn_repeats.repeat_type\n  repeat_type = repeat_type\n  repeat_every = josn_repeats.repeat_every\n  str_start_date = josn_repeats.start_date\n  if(preStartDate){\n    str_start_date = preStartDate\n  }\n  if(str_start_date){\n    start_date = moment(str_start_date, \"MM/DD/YYYY\");\n  }else{\n    start_date = moment();\n  }\n  if (josn_repeats && start_date) {\n    if (josn_repeats.end_option == \"Never\") {\n      repeat_on = josn_repeats.repeat_on\n      end_date = start_date.add(1, 'years')\n      if(preStartDate){\n        str_start_date = preStartDate\n      }\n      start_date = moment(str_start_date, \"MM/DD/YYYY\");\n      var days = matchingDaysBetween(start_date,end_date, function(day) {\n      \treturn repeat_on.indexOf(day.format('dddd')) > -1; //test function\n      });\n      repeat_details = josn_repeats.repeat_details\n      days.map(function(day) {\n        start_time = '00:00'\n        end_time = '00:00'\n        locationId = ''\n        for (var rd = 0; rd < repeat_details.length; rd++) {\n          if (day.format('dddd') == repeat_details[rd].day) {\n              start_time = repeat_details[rd].start_time;\n              end_time =  repeat_details[rd].end_time;\n              locationId = repeat_details[rd].location\n          }\n        }\n        scheduleClass.push({\n          skillClassId : skillClassId,\n          eventStartTime:start_time,\n          eventEndTime:end_time,\n          eventDay:day.format(\"dddd\"),\n          eventDate:day.toDate(),\n          locationId:locationId\n          })\n      });\n    } else {\n      repeat_on = josn_repeats.repeat_on\n      if (josn_repeats.end_option == \"occurrence\") {\n        occurrence = josn_repeats.end_option_value;\n        occure = eval(josn_repeats.repeat_every) * eval(occurrence)\n        str_start_date = josn_repeats.start_date\n        end_date = moment(str_start_date, \"MM/DD/YYYY\").add(occure, josn_repeats.repeat_type).format(\"YYYY-MM-DD\");\n      } else if (josn_repeats.end_option == \"rend_date\") {\n        end_date = josn_repeats.end_option_value;\n        end_date = moment(end_date, \"MM/DD/YYYY\").format(\"YYYY-MM-DD\");\n      }\n      var days = matchingDaysBetween(start_date, end_date, function(day) {\n        return repeat_on.indexOf(day.format('dddd')) > -1; //test function\n      });\n      repeat_details = josn_repeats.repeat_details\n      days.map(function(day) {\n        start_time = '00:00'\n        end_time = '00:00'\n        locationId = ''\n        for (var rd = 0; rd < repeat_details.length; rd++) {\n          if (day.format('dddd') == repeat_details[rd].day) {\n              start_time = repeat_details[rd].start_time;\n              end_time =  repeat_details[rd].end_time;\n              locationId = repeat_details[rd].location\n          }\n        }\n        scheduleClass.push({\n          skillClassId : skillClassId,\n          eventStartTime:start_time,\n          eventEndTime:end_time,\n          eventDay:day.format(\"dddd\"),\n          eventDate:day.toDate(),\n          locationId:locationId\n        })\n      });\n    }\n  }\n  return scheduleClass;\n}\n","class_type = \"ClassType\"; // avoid typos, this string occurs many times.\n//\nClassType = new Mongo.Collection(class_type);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\nClassType.attachSchema(new SimpleSchema({\n    createdBy: {\n        type: String,\n        optional: true\n    },\n    schoolId: {\n        type: String,\n        optional: true\n    },\n    name: {\n        type: String,\n        optional: true\n    },\n    desc: {\n        type: String,\n        optional: true\n    },\n    skillTypeId: {\n        type: String,\n        optional: true\n    },\n    classTypeImg: {\n        type: String,\n        optional: true\n    },\n    classes: {\n        type: [String],\n        optional: true\n    },\n    tags:{\n        type:String,\n        optional:true\n    }\n}));\n\nClassType.allow({\n    insert: function () {\n        return true;\n    },\n    update: function () {\n        return true;\n    },\n    remove: function () {\n        return true;\n    }\n});\n\n\nif(Meteor.isServer){\n\n  ClassType._ensureIndex({name:\"text\",desc:\"text\"});\n  Meteor.publish(\"classTypeBySchool\", function(schoolId){\n    return ClassType.find({schoolId:schoolId})\n  });\nMeteor.methods({\n  \"addClassType\": function (doc) {\n    return ClassType.insert(doc);\n  },\n  \"updateClassType\" : function(id,doc){\n    return ClassType.update({_id:id}, {$set:doc});\n  },\n  \"removeClassType\" : function(id){\n    SkillClass.remove({classTypeId:id});\n    ClassSchedule.remove({skillClassId:id});\n    ClassType.remove({_id:id});\n  }\n\n});\n}\n","CompanyImages = new FS.Collection(\"company_images\", {\n  stores: [new FS.Store.GridFS(\"company_images\", {})]\n});\nCompanyImages.allow({\n  insert: function(userId, doc) {\n    return true;\n  },\n  update: function(userId, doc, fieldNames, modifier) {\n    return true;\n  },\n  download: function(userId) {\n    return true;\n  },\n  remove: function (userId, parties) {\n    return true;\n  }\n});\n//\n\ncompany  = \"Company\";  // avoid typos, this string occurs many times.\n//\nCompany = new Mongo.Collection(company);\nCompany.before.insert(function (userId, doc)\n{\n  doc.created_at = new Date();\n  if (doc.user_id == '' || doc.user_id == undefined){\n    doc.user_id = Meteor.userId() ;\n  }\n});\nif (Meteor.isServer) {\nMeteor.methods({\n  /**\n   * Invoked by AutoForm to add a new Company record.\n   * @param doc The Company document.\n   */\n   setCompanyAsBase:function(company_id){\n     console.log(company_id);\n     access_key = Meteor.user().profile.access_key;\n     companys = Company.find({access_key:access_key}).fetch();\n     for(var c =0; c < companys.length;c++ ){\n       company = companys[c]\n       console.log(Company.update({_id:company._id,user_id:Meteor.userId()},{$set:{base_company:false}}));\n     }\n     Company.update({access_key:access_key,_id:company_id}, {$set:{base_company:true}});\n   },\n  addCompany: function(doc) {\n    check(doc, Company.simpleSchema());\n    url = Meteor.absoluteUrl(\"api/company?user_id=\"+Meteor.userId());\n    var result = HTTP.post(url,{data:doc})\n    return result;\n    // Company.insert(doc);\n  },\n  /**\n   *\n   * Invoked by AutoForm to update a Company record.\n   * @param doc The Company document.\n   * @param docID It's ID.\n   */\n  editCompany: function(doc, docID) {\n    check(doc, Company.simpleSchema());\n    url = Meteor.absoluteUrl(\"api/company?user_id=\"+Meteor.userId()+\"&company_id=\"+docID);\n    var result = HTTP.put(url,{data:doc})\n    return result;\n  //  Company.update({_id: docID}, doc);\n  },\n  deleteComapny:function(id){\n    Company.remove({_id:id});\n    return true;\n  }\n});\n//\n// Publish the entire Collection.  Subscription performed in the router.\n\n  Meteor.publish(company, function (user_id) {\n    if(user_id == undefined){\n      return[];\n    }\n    var user = Meteor.users.findOne({_id:user_id});\n    company_id = user.profile.company_id\n    access_key = user.profile.access_key\n    return Company.find({$or:[{user_id:user_id},{_id:company_id},{access_key:access_key}]});\n  });\n  Meteor.publish(\"CompanyShow\", function (user_id,id) {\n    return Company.find({user_id:user_id,_id:id});\n  });\n  Meteor.publish('CompanyImages', function(user_id) {\n    if(user_id == undefined){\n      return[];\n    }\n    var user = Meteor.users.findOne({_id:user_id});\n    company_id = user.profile.company_id\n    company = Company.find({$or:[{user_id:user_id},{_id:company_id}]}).fetch()[0];\n    if(company){\n      return CompanyImages.find({$or:[{\"metadata.admin_id\":user_id},{\"metadata.company_id\":company_id}]});\n    }else{\n      return [];\n    }\n  });\n}\n/**\n * Create the schema for Company\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Company.attachSchema(new SimpleSchema({\n  name: {\n    label: \"Name\",\n    type: String,\n    optional: false,\n    autoform: {\n      placeholder: \"Enter Company Name\"\n    }\n  },\n  url: {\n    label: \"URL\",\n    type: String,\n    optional: false,\n    autoform: {\n      placeholder: \"URL of your website (http://...)\"\n    }\n  },\n  zip_post_code: {\n    label: \"Post/Zip Code\",\n    optional: true,\n    type: String,\n    autoform: {\n      placeholder: \"Post/Zip Code\"\n    }\n  },\n  address: {\n    label: \"Address\",\n    type: String,\n    optional: true,\n    autoform: {\n      placeholder: \"Enter your Business Address\"\n    }\n  },\n  created_at : {\n   type: Date,\n   optional: true,\n   autoform: {\n     placeholder: \"\"\n   }\n  },\n  location:{\n   type: String,\n   optional: true,\n   autoform: {\n     placeholder: \"Enter Location\"\n   }\n },\n industry:{\n  type: String,\n  optional: true,\n  autoform: {\n    placeholder: \"Choose an Industry\"\n  }\n},\nexpertise:{\n type: String,\n optional: true,\n autoform: {\n   placeholder: \"Choose an Expertise\"\n }\n},\nlogo:{\n type: String,\n optional: true,\n autoform:{\n   afFieldInput:{\n       type: 'fileUpload',\n       collection: 'CompanyImages'\n     },\n     placeholder: \"Enter URL of your Logo\"\n  }\n},\ndescription:{\n type: String,\n optional: true,\n autoform: {\n   placeholder: \"Enter some Description\"\n }\n},\nradius:{\n type: Number,\n optional: true,\n autoform: {\n   placeholder: \"Business Radius in miles\"\n }\n},\nuser_id:{\n type: String,\n optional: true,\n autoform: {\n   placeholder: \"user_id\"\n }\n},\nbase_company :{\n  type: Boolean,\n  optional: true\n},\naccess_key :{\n  type: String,\n  optional: true\n}\n}));\n\n// company = new Meteor.Pagination(Company, {\n//   itemTemplate: \"Company\",\n//   route: \"/company/list/\",\n//   homeRoute: '/company/list/',\n//   // router: false,\n//   routerTemplate: \"ListCompany\",\n//   routerLayout: \"Layout\",\n//   divWrapper: false,\n//   sort: {\n//     id: 1\n//   },\n//   templateName: \"ListCompany\",\n//   perPage:5,\n//   auth: function(skip, sub) {\n//     var currrentUser = sub.userId;\n//      if (!currrentUser) { return []; }\n//     if(currrentUser){\n//       var user = Meteor.users.findOne({_id:currrentUser});\n//       company_id = user.profile.company_id;\n//       access_key = user.profile.access_key;\n//       //Custom queries:\n//        var customOwnerFilters = {$or:[{user_id:currrentUser},{_id:company_id},{access_key:access_key}]}\n//        //Edit custom settings if required:\n//        var customSettings = {};\n//       //  customSettings.fields = {address: 1}; //This is the only field that will be shown\n//        customSettings.filters = customOwnerFilters\n//\n//        //Leave this part untouched:\n//        var fields = customSettings.fields || this.fields\n//            , sort = customSettings.sort || this.sort //Since I haven't supplied this field, the Pagination sort I've configured above will be used (=2)\n//            , perPage = customSettings.perPage || this.perPage //Same as the line above\n//            , _filters = _.extend({}, customSettings.filters, this.filters)\n//            , _options = { fields: fields, sort: sort, limit: perPage, skip: skip };\n//        return [ _filters, _options ];\n//     }\n//   }\n// });\n","demand  = \"Demand\";  // avoid typos, this string occurs many times.\nclassDemand = \"ClassDemand\"\n//\nDemand = new Mongo.Collection(demand);\nClassDemand = new Mongo.Collection(classDemand);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\nDemand.attachSchema(new SimpleSchema({\n    userId: {\n     type: String,\n     optional: true\n   },schoolId: {\n     type: String,\n     optional: true\n   },\n   classTypeId: {\n     type: String,\n     optional: true\n   },dateOfJoin: {\n     type: Date,\n     optional: true\n   },\n   classId: {\n     type: String,\n     optional: true\n   }\n }));\nClassDemand.attachSchema(new SimpleSchema({\n   userId: {\n     type: String,\n     optional: true\n   },schoolId: {\n     type: String,\n     optional: true\n   },\n   classTypeId: {\n     type: String,\n     optional: true\n   },dateOfRequest: {\n     type: Date,\n     optional: true\n   },\n   classId: {\n     type: String,\n     optional: true\n   }\n }));\nif(Meteor.isServer){\n  var userClassJoin = function(user,school,skillClass)\n  {\n      var fromEmail = \"admin@techmeetups.com\";\n      var toEmail = user.emails[0].address;\n      Email.send({\n          from: fromEmail,\n          to: toEmail,\n          replyTo: fromEmail ,\n          subject: \"skillshape Class Join Notification\",\n          text: \"Hi \"+user.emails[0].address+\",\\nYou Join for \"+skillClass.className+\" at \"+school.name+\n          \"\\nFor more details please login \"+Meteor.absoluteUrl()+\"\\n\\n\"+\n          \"Thank you.\\n\"+\n          \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n          // + \"http://www.graphical.io/assets/img/Graphical-IO.png\"\n      });\n      Email.send({\n          from: fromEmail,\n          to: fromEmail,\n          replyTo: fromEmail ,\n          subject: \"skillshape Class Join Notification\",\n          text: \"Hi,\\n User email :  \"+user.emails[0].address+\",\\n is requested for join \"+skillClass.className+\" at \"+school.name+\n          \"Thank you.\\n\"+\n          \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n          // + \"http://www.graphical.io/assets/img/Graphical-IO.png\"\n      });\n  }\n\n  Meteor.publish(demand, function (user_id) {\n    return Demand.find({userId:user_id})\n  });\n  Meteor.publish(\"demandUser\", function (classId) {\n    \n    console.log(classId);\n    demand = Demand.find({classId:classId}).fetch()\n    user = demand.map(function(e){ return e.userId})\n    return [Meteor.users.find({_id:{$in:user}}),Demand.find({classId:classId})]\n  });\n\n  Meteor.methods({\n    addEmbadDemandWithUser : function(user,doc,school,skillClass){\n      userId = Accounts.createUser(user);\n      doc['userId'] = userId\n      var classTypeId = doc.classTypeId\n      user_id = doc.userId\n      var class_id = doc.classId\n      user = Meteor.users.findOne({_id:user_id});\n      classIds = [];\n      if(user.profile){\n        if(user.profile.classIds){\n          classIds = user.profile.classIds\n        }else{\n          classIds = []\n        }\n      }\n      if(!(classIds.indexOf(class_id) > -1)){\n        Meteor.users.update({_id:user_id}, { $push: {\"profile.classIds\" : class_id }});\n        doc['schoolId'] = school._id\n        doc['dateOfJoin'] = new Date();\n        user_id = doc.userId\n        user = Meteor.users.findOne({_id:user_id});\n        Demand.insert(doc);\n        userClassJoin(user,school,skillClass)\n        return true;\n      }else{\n        return false;\n      }\n    },\n    addEmbadDemand : function(doc,school,skillClass){\n      var classTypeId = doc.classTypeId\n      user_id = doc.userId\n      var class_id = doc.classId\n      user = Meteor.users.findOne({_id:user_id});\n      classIds = [];\n      if(user.profile){\n        if(user.profile.classIds){\n          classIds = user.profile.classIds\n        }else{\n          classIds = []\n        }\n      }\n      if(!(classIds.indexOf(class_id) > -1)){\n        Meteor.users.update({_id:user_id}, { $push: {\"profile.classIds\" : class_id }});\n        doc['schoolId'] = school._id\n        doc['dateOfJoin'] = new Date();\n        user_id = doc.userId\n        user = Meteor.users.findOne({_id:user_id});\n        Demand.insert(doc);\n        userClassJoin(user,school,skillClass)\n        return true;\n      }else{\n        return false;\n      }\n    },\n    addDemand: function(doc) {\n      var classTypeId = doc.classTypeId\n      user_id = doc.userId\n      var class_id = doc.classId\n      Meteor.users.update({_id:user_id}, { $push: {\"profile.classIds\" : class_id }});\n      class_type = ClassType.findOne({_id:classTypeId});\n      console.log(class_type);\n      doc['schoolId'] = class_type.schoolId\n      doc['dateOfJoin'] = new Date();\n      return Demand.insert(doc);\n    },\n    RemoveFromUser : function(classId,userId){\n      Meteor.users.update({_id:userId}, { $pull: {\"profile.classIds\" : classId }});\n      return true;\n    },\n    addClassDemand:function(doc){\n      classDemand = ClassDemand.findOne({classTypeId:doc.classTypeId,userId:doc.userId});\n      if(classDemand){\n        ClassDemand.update({_id:classDemand._id},{$set:{dateOfRequest: new Date()}})\n      }else{\n        doc.dateOfRequest = new Date();\n        ClassDemand.insert(doc)\n      }\n      return true;\n    }\n  });\n}\n","evaluation  = \"Evaluation\";  // avoid typos, this string occurs many times.\n//\nEvaluation = new Mongo.Collection(evaluation);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Evaluation.attachSchema(new SimpleSchema({\n   evaluationTypeId: {\n     type: String,\n     optional: true\n   },evaluationSubTypeId: {\n     type: String,\n     optional: true\n   }\n   ,classId: {\n     type: String,\n     optional: true\n   }\n   ,studentId: {\n     type: String,\n     optional: true\n   }\n   ,affectStudentId: {\n     type: String,\n     optional: true\n   }\n   ,instructorId: {\n     type: String,\n     optional: true\n   }\n   ,notes: {\n     type: String,\n     optional: true\n   } ,score: {\n      type: String,\n      optional: true\n  } ,levelScoreId: {\n   type: String,\n   optional: true\n } ,skillId: {\n    type: String,\n    optional: true\n  }\n  ,mediaList: {\n    type: [String],\n    optional: true\n  }\n }));\n","\nevaluation_type  = \"EvaluationType\";  // avoid typos, this string occurs many times.\n//\nEvaluationType = new Mongo.Collection(evaluation_type);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n EvaluationType.attachSchema(new SimpleSchema({\n   evaluationType: {\n     type: String,\n     optional: true\n   },evaluationSubType: {\n     type: String,\n     optional: true\n   },evaluationSubType: {\n     type: [String],\n     optional: true\n   }\n   ,notes: {\n     type: String,\n     optional: true\n   }\n   ,hasScore: {\n     type: String,\n     optional: true\n   },skillMandatory: {\n     type: String,\n     optional: true\n   }\n }));\n","level  = \"Level\";  // avoid typos, this string occurs many times.\n//\nLevel = new Mongo.Collection(level);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Level.attachSchema(new SimpleSchema({\n   title: {\n     type: String,\n     optional: true\n   },requirement: {\n     type: String,\n     optional: true\n   },sequence: {\n     type: String,\n     optional: true\n   },programId: {\n     type: String,\n     optional: true\n   },minTime: {\n     type: String,\n     optional: true\n   }\n }));\n","media  = \"Media\";  // avoid typos, this string occurs many times.\n//\nMedia = new Mongo.Collection(media);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Media.attachSchema(new SimpleSchema({\n   mType: {\n     type: String,\n     optional: true\n   },mFormat: {\n     type: String,\n     optional: true\n   },title: {\n     type: String,\n     optional: true\n   },desc: {\n     type: String,\n     optional: true\n   },sourcePath: {\n     type: String,\n     optional: true\n   },studentId: {\n     type: String,\n     optional: true\n   },instrcutorId: {\n     type: String,\n     optional: true\n   },skillId: {\n     type: String,\n     optional: true\n   },createdBy: {\n     type: String,\n     optional: true\n   },createdAt: {\n     type: Date,\n     optional: true\n   }\n }));\n","module  = \"Module\";  // avoid typos, this string occurs many times.\n//\nModule = new Mongo.Collection(module);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Module.attachSchema(new SimpleSchema({\n   skillId: {\n     type: String,\n     optional: true\n   },name: {\n     type: String,\n     optional: true\n   }\n   ,timeMins: {\n     type: String,\n     optional: true\n   }\n }));\n","monthly_pricing  = \"MonthlyPricing\";  // avoid typos, this string occurs many times.\n//\nMonthlyPricing = new Mongo.Collection(monthly_pricing);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n MonthlyPricing.attachSchema(new SimpleSchema({\n   packageName: {\n     type: String,\n     optional: true\n   },pymtType: {\n     type: String,\n     optional: true\n   },classTypeId: {\n     type: String,\n     optional: true\n   },\n   oneMonCost: {\n     type: Number,\n     optional: true\n   },\n   threeMonCost: {\n     type: Number,\n     optional: true\n   },sixMonCost: {\n     type: Number,\n     optional: true\n   },annualCost: {\n     type: Number,\n     optional: true\n   },lifetimeCost: {\n     type: Number,\n     optional: true\n   },\n   schoolId:{\n     type: String,\n     optional: true\n   }\n }));\nif(Meteor.isServer){\n  Meteor.publish(\"MonthlyPricing\", function(schoolId){\n    return MonthlyPricing.find({schoolId:schoolId});\n  });\n  Meteor.methods({\n    addMonthlyPackages:function(doc){\n      return MonthlyPricing.insert(doc)\n    },\n    updateMonthlyPackages:function(id,doc){\n      return MonthlyPricing.update({_id:id}, {$set:doc});\n    },\n    removeMonthlyPackages:function(id){\n      return MonthlyPricing.remove({_id:id});\n    }\n  });\n}\n","program  = \"Program\";  // avoid typos, this string occurs many times.\n//\nProgram = new Mongo.Collection(program);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Program.attachSchema(new SimpleSchema({\n  name: {\n    type: String,\n    optional: true\n  },schoolId: {\n    type: String,\n    optional: true\n  },description: {\n    type: String,\n    optional: true\n  },levelCount: {\n    type: String,\n    optional: true\n  },defaultMinmaxOrLevel: {\n    type: String,\n    optional: true\n  },scoreMin: {\n    type: String,\n    optional: true\n  }\n  ,scoreMax: {\n    type: String,\n    optional: true\n  }\n  }));\n","s_location = \"SLocation\"; // avoid typos, this string occurs many times.\n//\nSLocation = new Mongo.Collection(s_location);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n\n Schema = {}\n Schema.Room = new SimpleSchema({\n    id: {\n      optional: true,\n      type: String\n    },name: {\n       optional: true,\n       type: String\n     },\n     capicity: {\n        optional: true,\n        type: Number\n    }\n });\nSLocation.attachSchema(new SimpleSchema({\n    createdBy: {\n        type: String,\n        optional: true\n    },\n    schoolId: {\n        type: String,\n        optional: true\n    },\n    title: {\n        type: String,\n        optional: true\n    },\n    address: {\n        type: String,\n        optional: true\n    },\n    geoLat: {\n        type: String,\n        optional: true\n    },\n    geoLong: {\n        type: String,\n        optional: true\n    },\n    maxCapacity: {\n        type: String,\n        optional: true\n    },\n    city: {\n        type: String,\n        optional: true\n    },\n    state: {\n        type: String,\n        optional: true\n    },\n    neighbourhood: {\n        type: String,\n        optional: true\n    },\n    zip: {\n        type: String,\n        optional: true\n    },\n    country: {\n        type: String,\n        optional: true\n    },\n    loc: {\n        type: [Number], // [<longitude>, <latitude>]\n        index: '2d', // create the geospatial index\n        optional: true,\n        decimal: true\n    },\n    \"rooms.$\": {\n        type: Schema.Room,\n        optional: true\n    },\n}));\nif (Meteor.isServer) {\n    Meteor.publish(\"SchoolLocation\", function(schoolId){\n      return SLocation.find({schoolId:schoolId});\n    });\n    SLocation._ensureIndex({ loc: \"2d\" });\n    /*SLocation._ensureIndex({ loc: \"2dsphere\" });*/\n    /*createIndex({point:\"2dsphere\"});*/\n    Meteor.methods({\n      addLocation:function(data){\n         return SLocation.insert(data);\n      },\n      editLocation:function(id,data){\n         return SLocation.update({_id:id}, {$set:data});\n      },\n      removeLocation:function(id){\n        SLocation.remove({_id:id});\n      },\n      addRoom:function(data,location,action){\n        console.log(data);\n        console.log(location);\n        console.log(action);\n          if(action == \"new\"){\n            return SLocation.update({_id:location},{$push:{\"rooms\":data}});\n          }else{\n            SLocation.update({_id:location},{$pull:{\"rooms\":{id:data.id}}},{multi: true});\n            return SLocation.update({_id:location},{$push:{\"rooms\":data}});\n          }\n\n      },\n      roomRemove : function(id,location){\n          SLocation.update({_id:location},{$pull:{\"rooms\":{id:id}}},{multi: true});\n          return true;\n      }\n    });\n}\n","school = \"School\"; // avoid typos, this string occurs many times.\n//\nSchool = new Mongo.Collection(school);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\nSchema = {};\nSchema.Media = new SimpleSchema({\n  mediaType: {\n    optional: true,\n    type: String\n  },\n  fileName: {\n    optional: true,\n    type: String\n  },\n  fileSize: {\n    optional: true,\n    type: String\n  },\n  filePath: {\n    optional: true,\n    type: String\n  },\n  contentType: {\n    optional: true,\n    type: String\n  }\n});\nSchool.attachSchema(new SimpleSchema({\n  is_publish: {\n    type: String,\n    optional: true\n  },\n  name: {\n    type: String,\n    optional: true\n  },\n  website: {\n    type: String,\n    optional: true\n  },\n  phone: {\n    type: String,\n    optional: true\n  },\n  schooldesc: {\n    type: String,\n    optional: true\n  },\n  address: {\n    type: String,\n    optional: true\n  },\n  schoolGroupId: {\n    type: String,\n    optional: true\n  },\n  tag: {\n    type: String,\n    optional: true\n  },\n  quote: {\n    type: String,\n    optional: true\n  },\n  message: {\n    type: String,\n    optional: true\n  },\n  categoryCalled: {\n    type: String,\n    optional: true\n  },\n  subjectCalled: {\n    type: String,\n    optional: true\n  },\n  levelCalled: {\n    type: String,\n    optional: true\n  },\n  phone: {\n    type: String,\n    optional: true\n  },\n  claimed: {\n    type: String,\n    optional: true\n  },\n  logoImg: {\n    type: String,\n    optional: true\n  },\n  topBarColor: {\n    type: String,\n    optional: true\n  },\n  bodyColour: {\n    type: String,\n    optional: true\n  },\n  backGroundVideoUrl: {\n    type: String,\n    optional: true\n  },\n  moduleColour: {\n    type: String,\n    optional: true\n  },\n  font: {\n    type: String,\n    optional: true\n  },\n  mainImage: {\n    type: String,\n    optional: true\n  },\n  aboutHtml: {\n    type: String,\n    optional: true\n  },\n  descHtml: {\n    type: String,\n    optional: true\n  },\n  scoreMin: {\n    type: String,\n    optional: true\n  },\n  scoreMax: {\n    type: String,\n    optional: true\n  },\n  mediaList: {\n    type: [Schema.Media],\n    optional: true\n  },\n  userId: {\n    type: String,\n    optional: true\n  },\n  email: {\n    type: String,\n    optional: true\n  }\n}));\nSchool.friendlySlugs(\n  {\n    slugFrom: 'name',\n    slugField: 'slug',\n    distinct: true,\n    updateSlug: true\n  }\n);\nif (Meteor.isServer) {\n  var emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n  School._ensureIndex({ name: \"text\", website: \"text\" });\n  Meteor.publish(school, function (user_id, coords, skill, classPrice, monthPrice, textSearch, limit, selectedTag) {\n    limit = limit;\n\n    class_filter = {}\n    classTypeFilter = {}\n    allClassIds = []\n    allClassTypeIds = []\n    schoolList = School.find({ is_publish: 'N' }).fetch();\n    nSchoolIds = schoolList.map(function (a) { return a._id });\n    if (textSearch) {\n      textSearchfilter = { $text: { $search: textSearch, $caseSensitive: true } }\n      console.log(textSearchfilter);\n      schools = School.find(textSearchfilter).fetch();\n      if (schools.length > 0) {\n        schoolIds = schools.map(function (a) {\n          return a._id\n        })\n        console.log(schoolIds);\n        schoolClass = SkillClass.find({ schoolId: { $in: schoolIds } }).fetch();\n        allClassIds = schoolClass.map(function (a) {\n          return a._id\n        })\n        allClassTypeIds = schoolClass.map(function (a) {\n          return a.classTypeId\n        })\n      }\n      classd = SkillClass.find(textSearchfilter).fetch();\n      classIds = classd.map(function (a) {\n        return a._id\n      })\n      if (allClassIds.length > 0) {\n        allClassIds = classIds.concat(allClassIds)\n      }\n      console.log(classd);\n      classTypeIds = classd.map(function (a) {\n        return a.classTypeId\n      })\n      if (allClassTypeIds.length > 0) {\n        classTypeIds = classTypeIds.concat(allClassTypeIds)\n      }\n      classTypeFilter._id = { $in: classTypeIds }\n      limit = { limit: limit }\n      console.log(allClassIds);\n      class_filter = { _id: { $in: allClassIds } }\n      class_filter.schoolId = { $nin: nSchoolIds }\n      classTypeFilter.schoolId = { $nin: nSchoolIds }\n\n      skillCursor = SkillClass.find(class_filter, limit)\n      skillResult = skillCursor.fetch();\n      classTypeIds = skillResult.map(function (a) { return a.classTypeId });\n      schoolIds = skillResult.map(function (a) { return a.schoolId });\n      classTypeFilter._id = { $in: classTypeIds }\n      schoolFilter = { _id: { $in: schoolIds } }\n\n      return [School.find(schoolFilter), skillCursor, SLocation.find({}), SkillType.find({}), ClassType.find(classTypeFilter), ClassPricing.find({})];\n    }\n    if (coords) {\n      // place variable will have all the information you are looking for.\n      var maxDistance = 50;\n      // we need to convert the distance to radians\n      // the raduis of Earth is approximately 6371 kilometers\n      maxDistance /= 63;\n      try {\n        slocations = SLocation.find({\n          /*loc: {\n            $near : {$geometry:{type: \"Point\",coordinates:coords}, $maxDistance:50000}\n          }*/\n          loc: {\n            $near: coords,\n            $maxDistance: maxDistance\n          }\n          /*$maxDistance: maxDistance*/\n\n        }).fetch();\n      } catch (e) {\n        slocations = [];\n      }\n\n      locaion_ids = slocations.map(function (a) {\n        return a._id;\n      });\n      class_filter = { locationId: { $in: locaion_ids } };\n      skillClass = SkillClass.find(class_filter)\n      tmpClassIds = skillClass.map(function (a) {\n        return a._id;\n      });\n      schoolIds = skillClass.map(function (a) {\n        return a.schoolId;\n      });\n      if (tmpClassIds.length < 1) {\n        tmpClassIds.push(\"000000000\")\n      }\n      allClassIds = tmpClassIds\n      /*class_type = ClassType.find({schoolId:{$in:schoolIds}}).fetch()\n      classTypeIds = class_type.map(function(a) {\n                    return a._id;\n      });*/\n\n      class_type = ClassType.find({ schoolId: { $in: schoolIds } }).fetch();\n      classTypeIds = class_type.map(function (a) {\n        return a._id;\n      });\n      if (skill) {\n        let _query = { skillTypeId: skill, schoolId: { $in: schoolIds } };\n        if (selectedTag)\n          _query[\"tags\"] = { $regex: new RegExp(selectedTag, 'mi') };\n        class_type = ClassType.find(_query).fetch()\n        classTypeIds = class_type.map(function (a) {\n          return a._id;\n        });\n      }\n      if (monthPrice) {\n        price = eval(monthPrice)\n        if (price == 201) {\n          price = eval(price)\n          month_price = MonthlyPricing.find({ $or: [{ oneMonCost: { $gte: price } }, { threeMonCost: { $gte: price } }, { sixMonCost: { $gte: price } }, { annualCost: { $gte: price } }, { lifetimeCost: { $gte: price } }], schoolId: { $in: schoolIds } }).fetch()\n        } else {\n          month_price = MonthlyPricing.find({ $or: [{ oneMonCost: { $lte: price } }, { threeMonCost: { $lte: price } }, { sixMonCost: { $lte: price } }, { annualCost: { $lte: price } }, { lifetimeCost: { $lte: price } }], schoolId: { $in: schoolIds } }).fetch()\n        }\n        classTypeIds = []\n        month_price.map(function (a) {\n          if (a.classTypeId) {\n            Ids = a.classTypeId.split(\",\");\n            classTypeIds = classTypeIds.concat(Ids)\n          }\n        });\n      }\n      if (classPrice) {\n        price = eval(classPrice)\n        console.lIntelliJIDEALicenseServer_linux_amd64og(price);\n        if (price == 201) {\n          class_price = ClassPricing.find({ cost: { $gte: price }, schoolId: { $in: schoolIds } }).fetch()\n        } else {\n          class_price = ClassPricing.find({ cost: { $lte: price }, schoolId: { $in: schoolIds } }).fetch()\n        }\n        /*{ \"Price\": {\"$gt\": 2, \"$lt\": 1250 } }*/\n        console.log(class_price);\n        classTypeIds = []\n        class_price.map(function (a) {\n          if (a.classTypeId) {\n            Ids = a.classTypeId.split(\",\");\n            classTypeIds = classTypeIds.concat(Ids)\n          }\n        });\n      }\n      class_filter.classTypeId = { $in: classTypeIds }\n      classTypeFilter._id = { $in: classTypeIds }\n      console.log(class_filter);\n      limit = { limit: limit }\n      class_filter.schoolId = { $nin: nSchoolIds }\n      classTypeFilter.schoolId = { $nin: nSchoolIds }\n\n      skillCursor = SkillClass.find(class_filter, limit)\n      skillResult = skillCursor.fetch();\n      classTypeIds = skillResult.map(function (a) { return a.classTypeId });\n      schoolIds = skillResult.map(function (a) { return a.schoolId });\n      classTypeFilter._id = { $in: classTypeIds }\n      schoolFilter = { _id: { $in: schoolIds } }\n      return [School.find(schoolFilter), skillCursor, SLocation.find({}), SkillType.find({}), ClassType.find(classTypeFilter), ClassPricing.find({})];\n    }\n    if (skill) {\n      let _query = { skillTypeId: skill };\n      if (selectedTag)\n        _query[\"tags\"] = { $regex: new RegExp(selectedTag, 'mi') };\n      console.log(_query);\n      class_type = ClassType.find(_query).fetch()\n      classTypeIds = class_type.map(function (a) {\n        return a._id;\n      });\n      if (classPrice) {\n        price = eval(classPrice)\n        console.log(price);\n        if (price == 201) {\n          class_price = ClassPricing.find({ cost: { $gte: price } }).fetch()\n        } else {\n          class_price = ClassPricing.find({ cost: { $lte: price } }).fetch()\n        }\n        /*{ \"Price\": {\"$gt\": 2, \"$lt\": 1250 } }*/\n        console.log(class_price);\n        newclassTypeIds = []\n        class_price.map(function (a) {\n          if (a.classTypeId) {\n            Ids = a.classTypeId.split(\",\");\n            newclassTypeIds = newclassTypeIds.concat(Ids)\n          }\n        });\n        classTypeIds = newclassTypeIds.filter(function (obj) { return classTypeIds.indexOf(obj) > -1; });\n      }\n      if (monthPrice) {\n        price = eval(monthPrice)\n        if (price == 201) {\n          price = eval(price)\n          month_price = MonthlyPricing.find({ $or: [{ oneMonCost: { $gte: price } }, { threeMonCost: { $gte: price } }, { sixMonCost: { $gte: price } }, { annualCost: { $gte: price } }, { lifetimeCost: { $gte: price } }] }).fetch()\n        } else {\n          month_price = MonthlyPricing.find({ $or: [{ oneMonCost: { $lte: price } }, { threeMonCost: { $lte: price } }, { sixMonCost: { $lte: price } }, { annualCost: { $lte: price } }, { lifetimeCost: { $lte: price } }] }).fetch()\n        }\n        newclassTypeIds = []\n        month_price.map(function (a) {\n          if (a.classTypeId) {\n            Ids = a.classTypeId.split(\",\");\n            newclassTypeIds = classTypeIds.concat(Ids)\n          }\n        });\n        classTypeIds = newclassTypeIds.filter(function (obj) { return classTypeIds.indexOf(obj) > -1; });\n      }\n\n      class_filter.classTypeId = { $in: classTypeIds }\n      classTypeFilter._id = { $in: classTypeIds }\n      limit = { limit: limit }\n      class_filter.schoolId = { $nin: nSchoolIds }\n      classTypeFilter.schoolId = { $nin: nSchoolIds }\n\n      skillCursor = SkillClass.find(class_filter, limit)\n      skillResult = skillCursor.fetch();\n      classTypeIds = skillResult.map(function (a) { return a.classTypeId });\n      schoolIds = skillResult.map(function (a) { return a.schoolId });\n      classTypeFilter._id = { $in: classTypeIds }\n      schoolFilter = { _id: { $in: schoolIds } }\n      return [School.find(schoolFilter), skillCursor, SLocation.find({}), SkillType.find({}), ClassType.find(classTypeFilter), ClassPricing.find({})];\n    }\n    if (classPrice) {\n      price = eval(classPrice)\n      console.log(price);\n      if (price == 201) {\n        class_price = ClassPricing.find({ cost: { $gte: price } }).fetch()\n      } else {\n        class_price = ClassPricing.find({ cost: { $lte: price } }).fetch()\n      }\n      /*{ \"Price\": {\"$gt\": 2, \"$lt\": 1250 } }*/\n      classTypeIds = []\n      class_price.map(function (a) {\n        if (a.classTypeId) {\n          Ids = a.classTypeId.split(\",\");\n          classTypeIds = classTypeIds.concat(Ids)\n        }\n      });\n      class_filter.classTypeId = { $in: classTypeIds }\n      classTypeFilter._id = { $in: classTypeIds }\n    }\n\n    if (monthPrice) {\n      price = eval(monthPrice)\n      if (price == 201) {\n        price = eval(price)\n        month_price = MonthlyPricing.find({ $or: [{ oneMonCost: { $gte: price } }, { threeMonCost: { $gte: price } }, { sixMonCost: { $gte: price } }, { annualCost: { $gte: price } }, { lifetimeCost: { $gte: price } }] }).fetch()\n      } else {\n        month_price = MonthlyPricing.find({ $or: [{ oneMonCost: { $lte: price } }, { threeMonCost: { $lte: price } }, { sixMonCost: { $lte: price } }, { annualCost: { $lte: price } }, { lifetimeCost: { $lte: price } }] }).fetch()\n      }\n      classTypeIds = []\n      month_price.map(function (a) {\n        if (a.classTypeId) {\n          Ids = a.classTypeId.split(\",\");\n          classTypeIds = classTypeIds.concat(Ids)\n        }\n      });\n      class_filter.classTypeId = { $in: classTypeIds }\n      classTypeFilter._id = { $in: classTypeIds }\n    }\n    limit = { limit: limit }\n    console.log(\"--------------------------\");\n    class_filter.schoolId = { $nin: nSchoolIds }\n    classTypeFilter.schoolId = { $nin: nSchoolIds }\n    console.log(class_filter);\n    console.log(limit);\n    skillCursor = SkillClass.find(class_filter, limit)\n    skillResult = skillCursor.fetch();\n    classTypeIds = skillResult.map(function (a) { return a.classTypeId });\n    schoolIds = skillResult.map(function (a) { return a.schoolId });\n    classTypeFilter._id = { $in: classTypeIds }\n    schoolFilter = { _id: { $in: schoolIds } }\n    console.log(\"--------------------------\");\n    return [School.find(schoolFilter), skillCursor, SLocation.find({}), SkillType.find({}), ClassType.find(classTypeFilter), ClassPricing.find({})];\n  });\n  Meteor.publish(\"UserSchool\", function (schoolId) {\n    return School.find({ _id: schoolId });\n  });\n  Meteor.publish(\"UserSchoolbySlug\", function (slug) {\n    return School.find({ slug: slug });\n  });\n  Meteor.publish(\"ClaimSchoolFilter\", function (phone, website, name, coords, cskill, role, limit) {\n    filter = {}\n    limit = { limit: limit }\n    schoolList = School.find({ is_publish: 'N' }).fetch();\n    UnPublishSchoolIds = schoolList.map(function (a) { return a._id });\n    if (phone) {\n      filter.phone = { '$regex': '' + phone + '', '$options': '-i' };\n    }\n    if (website) {\n      filter.website = { '$regex': '' + website + '', '$options': '-i' };\n    }\n    if (name) {\n      filter.name = { '$regex': '' + name + '', '$options': '-i' };\n    }\n    AllSchoolIds = []\n    console.log(coords);\n    if (coords) {\n      // place variable will have all the information you are looking for.\n      var maxDistance = 50;\n      // we need to convert the distance to radians\n      // the raduis of Earth is approximately 6371 kilometers\n      maxDistance /= 63;\n      slocations = SLocation.find({\n        loc: {\n          $near: coords,\n          $maxDistance: maxDistance\n        }\n      }).fetch();\n      schoolIds = slocations.map(function (a) {\n        return a.schoolId;\n      });\n      console.log(schoolIds);\n      filter._id = { $in: schoolIds };\n      AllSchoolIds = schoolIds;\n    }\n    if (cskill) {\n      class_type = ClassType.find({ skillTypeId: cskill }).fetch()\n      schoolIds = class_type.map(function (a) {\n        return a.schoolId;\n      });\n      console.log(schoolIds);\n      AllSchoolIds = schoolIds.concat(AllSchoolIds)\n      if (AllSchoolIds.length > 0) {\n        filter._id = { $in: AllSchoolIds };\n      } else {\n        filter._id = { $in: schoolIds };\n      }\n\n    }\n    if (role && role == \"Superadmin\") {\n\n    } else {\n      /*result = {}\n      result = _.extend(result,filter._id, {$nin:UnPublishSchoolIds});*/\n      filter.is_publish = { $ne: 'N' }\n    }\n    /*filter.claimed = { $ne : 'Y' }*/\n    console.log(filter);\n    return School.find(filter, limit);\n  });\n  findUrl = function (text) {\n    var source = (text || '').toString();\n    var urlArray = [];\n    var url;\n    var matchArray;\n    // Regular expression to find FTP, HTTP(S) and email URLs.\n    var regexToken = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)|((mailto:)?[_.\\w-]+@([\\w][\\w\\-]+\\.)+[a-zA-Z]{2,3})/g;\n    // Iterate through any URLs in the text.\n    while ((matchArray = regexToken.exec(source)) !== null) {\n      var token = matchArray[0];\n      return token;\n    }\n    return '';\n  }\n  Meteor.methods({\n    project_upload: function (fileInfo, fileData) {\n      console.log(\"received file \" + fileInfo.name + \" data: \" + fileData);\n      var results = Papa.parse(fileData, {\n        header: true\n      });\n      csvdata = results.data\n     for (var i = 0; i < csvdata.length; i++) {\n       if (csvdata[i].name && csvdata[i].website && csvdata[i].name.length > 0 &&  emailRegex.test(csvdata[i].emailAddress)) {\n          school = School.findOne({ name: csvdata[i].name, website: csvdata[i].website });\n          schoolId = \"\"\n          locationId = \"\"\n          classTypeId = \"\"\n          if (school) {\n            schoolId = school._id\n            doc = {\n              name: csvdata[i].name,\n              website: findUrl(csvdata[i].website),\n              phone: csvdata[i].phone,\n              mainImage: findUrl(csvdata[i].mainImage),\n              aboutHtml: csvdata[i].aboutHtml,\n              descHtml: csvdata[i].descHtml ,\n              email:csvdata[i].emailAddress\n            }\n            School.update({ _id: schoolId }, { $set: doc });\n          } else {\n            doc = {\n              name: csvdata[i].name,\n              website: findUrl(csvdata[i].website),\n              phone: csvdata[i].phone,\n              mainImage: findUrl(csvdata[i].mainImage),\n              aboutHtml: csvdata[i].aboutHtml,\n              descHtml: csvdata[i].descHtml,\n              email:csvdata[i].emailAddress\n            }\n            let newUser= CreateNewUser(csvdata[i].emailAddress, csvdata[i].name,csvdata[i].firstName,csvdata[i].lastName);\n            if(newUser){\n            doc[\"userId\"]=newUser;\n            }\n            schoolId = School.insert(doc)\n          }\n          slocation = SLocation.findOne({ schoolId: schoolId, title: csvdata[i].LocationTitle, zip: csvdata[i].zip })\n          if (slocation) {\n\n          } else {\n            slocation = SLocation.findOne({ schoolId: schoolId, address: csvdata[i].address, zip: csvdata[i].zip })\n          }\n          doc = {\n            title: csvdata[i].LocationTitle,\n            neighbourhood: csvdata[i].neighbourhood,\n            address: csvdata[i].address,\n            city: csvdata[i].city,\n            state: csvdata[i].state,\n            zip: csvdata[i].zip,\n            country: csvdata[i].country,\n            schoolId: schoolId\n          }\n          var data = {}\n          try {\n            slocation_detail = doc.address + \",\" + doc.city + \",\" + doc.state + \",\" + doc.zip\n            console.log(slocation_detail)\n            var url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\" + slocation_detail + \"&key=AIzaSyBtQoiRR6Ft0wGTajMd8uTZb71h8kwD5Ew\"\n            data = Meteor.http.call(\"GET\", url);\n            data = JSON.parse(data.content);\n            if (data.results[0] && data.results[0].geometry && data.results[0].geometry.location) {\n              data = data.results[0].geometry.location\n            }\n            if (data.status == 'ZERO_RESULTS') {\n              data.lat = 0\n              data.lng = 0\n              console.log(\"Location not found\");\n            }\n            doc.geoLat = data.lat\n            doc.geoLong = data.lng\n            doc.loc = [data.lat, data.lng]\n          } catch (err) {\n            console.log(\"Location not found\");\n            data.lat = 0\n            data.lng = 0\n            doc.geoLat = data.lat\n            doc.geoLong = data.lng\n            doc.loc = [data.lat, data.lng]\n          }\n          if (slocation) {\n            locationId = slocation._id\n            SLocation.update({ _id: locationId }, { $set: doc });\n          } else {\n            if (csvdata[i].address) {\n              locationId = SLocation.insert(doc);\n            }\n          }\n\n          var obj = {}\n          obj.schoolId = schoolId;\n          obj.name = csvdata[i].classTypeName\n          skill = csvdata[i].skillType\n          if (skill) {\n            skill = skill.split(\",\")\n            skill = skill[0].trim();\n          }\n\n\n          skillType = SkillType.findOne({ name: skill })\n          if (skillType) {\n\n          } else {\n            if (csvdata[i].classTypeName) {\n              SkillType.insert({ name: skill })\n            }\n          }\n          obj.skillTypeId = skill\n          obj.desc = csvdata[i].classTypeDesc\n          obj.classTypeImg = csvdata[i].classTypeImg\n\n          classtype = ClassType.findOne({ schoolId: schoolId, name: csvdata[i].classTypeName });\n          if (classtype) {\n\n          } else {\n            classtype = ClassType.findOne({ schoolId: schoolId, desc: csvdata[i].classTypeDesc });\n            if (classtype) {\n\n            } else {\n              classtype = ClassType.findOne({ schoolId: schoolId, skillTypeId: skill });\n            }\n          }\n          if (classtype) {\n            classTypeId = classtype._id\n            ClassType.update({ _id: classTypeId }, { $set: obj });\n          } else {\n            if (obj.name) {\n              classTypeId = ClassType.insert(obj);\n            }\n          }\n          skillClass = SkillClass.findOne({ className: csvdata[i].className, schoolId: schoolId });\n\n          var obj = {}\n          obj.className = csvdata[i].className\n          obj.schoolId = schoolId;\n          obj.locationId = locationId\n          obj.classTypeId = classTypeId\n          obj.plannedStart = csvdata[i].plannedStart\n          obj.plannedEnd = csvdata[i].plannedStart\n          var repeat = {}\n          obj.planEndTime = csvdata[i].planEndTime\n          obj.planStartTime = csvdata[i].planStartTime\n          repeat_type = csvdata[i].RepeatType\n          repeat.repeat_type = repeat_type;\n          repeat_every = csvdata[i].RepeatEvery\n          repeat.repeat_every = repeat_every;\n          start_date = csvdata[i].plannedStart\n          repeat.start_date = start_date;\n          repeat_on_item = []\n          obj.isRecurring = csvdata[i].isRecurring == \"TRUE\" ? true : false\n          csvdata[i].Sunday == \"TRUE\" ? repeat_on_item.push(\"Sunday\") : false\n          csvdata[i].Monday == \"TRUE\" ? repeat_on_item.push(\"Monday\") : false\n          csvdata[i].Tuesday == \"TRUE\" ? repeat_on_item.push(\"Tuesday\") : false\n          csvdata[i].Wednesday == \"TRUE\" ? repeat_on_item.push(\"Wednesday\") : false\n          csvdata[i].Thursday == \"TRUE\" ? repeat_on_item.push(\"Thursday\") : false\n          csvdata[i].Friday == \"TRUE\" ? repeat_on_item.push(\"Friday\") : false\n          csvdata[i].Saturday == \"TRUE\" ? repeat_on_item.push(\"Saturday\") : false\n\n          repeat_on = [];\n          repeat_details = []\n          repeat_on_item.map(function (day) {\n            repeat_on.push(day);\n            console.log(csvdata[i]);\n            start_time = day + 'StartTime';\n            end_time = day + 'EndTime';\n            location = day + 'LocationTitle';\n            stime = csvdata[i][start_time];\n            etime = csvdata[i][end_time];\n            slocation = SLocation.findOne({ schoolId: schoolId, title: csvdata[i][location] })\n            if (slocation) {\n              locationId = slocation._id\n            }\n            repeat_details.push({ \"day\": day, \"start_time\": stime, \"end_time\": etime, \"location\": locationId })\n          })\n          repeat.repeat_on = repeat_on\n          repeat.repeat_details = repeat_details\n          end_option_item = csvdata[i].Ends\n          end_option = csvdata[i].Ends\n\n          if (end_option == \"On Specific Date\") {\n            end_option = \"rend_date\"\n          } else if (end_option == \"After\") {\n            end_option = \"occurrence\"\n          } else {\n            end_option = \"Never\"\n          }\n          repeat.end_option = end_option\n          if (end_option == \"Never\") {\n            end_option_value = \"Never\";\n          } else {\n            end_option_value = csvdata[i].EndValue\n          }\n          repeat.end_option_value = end_option_value\n          obj.repeats = JSON.stringify(repeat)\n          if (skillClass) {\n            SkillClass.update({ _id: skillClass._id }, { $set: obj });\n          } else {\n            if (obj.className) {\n              SkillClass.insert(obj);\n            }\n          }\n          monthlypricing = MonthlyPricing.findOne({ schoolId: schoolId, packageName: csvdata[i].monthlyPackageName })\n          var obj = {}\n          obj.packageName = csvdata[i].monthlyPackageName\n          obj.pymtType = csvdata[i].PaymentType\n          obj.classTypeId = classTypeId\n          obj.oneMonCost = csvdata[i].oneMonCost\n          obj.threeMonCost = csvdata[i].threeMonCost\n          obj.sixMonCost = csvdata[i].sixMonCost\n          obj.annualCost = csvdata[i].annualCost\n          obj.lifetimeCost = csvdata[i].lifeTimeCost\n          obj.schoolId = schoolId;\n          if (monthlypricing) {\n            MonthlyPricing.update({ _id: monthlypricing._id }, { $set: obj });\n          } else {\n            if (obj.packageName) {\n              console.log(obj);\n              MonthlyPricing.insert(obj);\n            }\n          }\n          classpricing = ClassPricing.findOne({ schoolId: schoolId, packageName: csvdata[i].ClassPackageName })\n          obj = {}\n          obj.packageName = csvdata[i].ClassPackageName\n          obj.cost = !isNaN(csvdata[i].Cost) ? csvdata[i].Cost : 0\n          obj.classTypeId = classTypeId\n          obj.noClasses = csvdata[i].NumberOfClasses\n          obj.start = csvdata[i].Expires\n          obj.finish = csvdata[i].ExpiresValue\n          obj.schoolId = schoolId;\n          if (classpricing) {\n            ClassPricing.update({ _id: classpricing._id }, { $set: obj });\n          } else {\n            if (obj.packageName) {\n              console.log(obj);\n              ClassPricing.insert(obj);\n            }\n          }\n        }\n\n\n       \n      }\n\n    },\n    getConnectedSchool: function (userId) {\n      school_list = []\n      user = Meteor.users.findOne({ _id: userId });\n      if (user && user.profile && user.profile.classIds && user.profile.classIds.length > 0) {\n        classIds = user.profile.classIds\n        var demand = Demand.find({ userId: userId, classId: { $in: classIds } })\n        school_list = demand.map(function (a) {\n          return a.schoolId\n        })\n      }\n      return School.find({ _id: { $in: school_list } }).fetch();\n    },\n    addSchool: function (data) {\n      var schoolId = School.insert(data);\n      Meteor.users.update({ _id: data.userId }, { $set: { \"profile.schoolId\": schoolId } });\n      return schoolId\n    },\n    editSchool: function (id, data) {\n      return School.update({ _id: id }, { $set: data });\n    },\n    getMySchool: function (school_id, userId) {\n      console.log(school_id);\n      school = School.findOne({ _id: school_id });\n      if (school) {\n\n      } else {\n        Meteor.users.update({ _id: userId }, { $set: { \"profile.schoolId\": \" \" } });\n      }\n      return School.find({ _id: school_id }).fetch();\n    },\n    claimSchool: function (userId, schoolId) {\n      data = {}\n      data.userId = userId;\n      data.claimed = 'Y'\n      School.update({ _id: schoolId }, { $set: data });\n      return Meteor.users.update({ _id: data.userId }, { $set: { \"profile.schoolId\": schoolId, \"profile.acess_type\": \"school\" } });\n    },\n    addMedia: function (schoolId, fileobj) {\n      return School.update({ _id: schoolId }, { $push: { \"mediaList\": fileobj } });\n    },\n    removeMedia: function (schoolId, path) {\n      console.log({ _id: schoolId }, { $pull: { \"mediaList\": { filePath: path } } }, { multi: true })\n      School.update({ _id: schoolId }, { $pull: { \"mediaList\": { filePath: path } } }, { multi: true });\n    },\n    publish_school: function (schoolId, is_publish) {\n      data = { \"is_publish\": is_publish }\n      return School.update({ _id: schoolId }, { $set: data });\n    }\n\n  });\n\n\n    function CreateNewUser (email, name,firstName,lastName) {\n    if (typeof email !== \"undefined\" && emailRegex.test(email)) {\n       let _user= Accounts.findUserByEmail(email)\n      if (!_user) {\n    return Accounts.createUser({\n          email: email, password: email,\n          profile: { firstName: firstName, lastName: lastName  },\n          roles: \"Admin\",\n          preverfiedUser:true\n        });\n      }else{\n      return  _user._id;\n      }\n    }\n    return false;\n  }\n\n}\n","skill  = \"Skill\";  // avoid typos, this string occurs many times.\n//\nSkill = new Mongo.Collection(skill);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Skill.attachSchema(new SimpleSchema({\n   categoryTag: {\n     type: [String],\n     optional: true\n   },\n   subjectTag: {\n     type: [String],\n     optional: true\n   }\n   ,\n   ownTags: {\n     type: [String],\n     optional: true\n   }\n   ,\n   minmaxOrLevel: {\n     type: [String],\n     optional: true\n   }\n   ,\n   reqForLevelId: {\n     type: String,\n     optional: true\n   },\n   prerequisitesSkill: {\n     type: [String],\n     optional: true\n   },skillGroup: {\n     type: [String],\n     optional: true\n   },requiredFor: {\n     type: [String],\n     optional: true\n   },similarSkill: {\n     type: [String],\n     optional: true\n   }\n   ,iconpic: {\n     type: String,\n     optional: true\n   },name: {\n     type: String,\n     optional: true\n   },basicInstruction: {\n     type: String,\n     optional: true\n   },variationInstruction: {\n     type: String,\n     optional: true\n   },counterInstructions: {\n     type: String,\n     optional: true\n   },notesToStudents: {\n     type: String,\n     optional: true\n   },\n   teachingPointers: {\n     type: String,\n     optional: true\n   },\n   notesToInstructors: {\n     type: String,\n     optional: true\n   },\n   mediaList: {\n     type: [String],\n     optional: true\n   }\n }));\n","skill_class  = \"SkillClass\";  // avoid typos, this string occurs many times.\n\nSkillClass = new Mongo.Collection(skill_class);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n\n Schema = {};\n Schema.ModuleLink = new SimpleSchema({\n   moduleId: {\n      optional: true,\n      type: String,\n    },startTime: {\n       optional: true,\n       type: Date,\n     },endTime: {\n        optional: true,\n        type: Date,\n      }\n});\nSchema.InstructorLink = new SimpleSchema({\n  instructorId: {\n     optional: true,\n     type: String,\n   },joinedDt: {\n      optional: true,\n      type: Date,\n    }\n});\nSchema.AssistantLink = new SimpleSchema({\n  assistantId: {\n     optional: true,\n     type: String,\n   },joinedDt: {\n      optional: true,\n      type: Date,\n    }\n});\nSchema.StudentsLink = new SimpleSchema({\n  signedupStudentId: {\n     optional: true,\n     type: String,\n   },joinedDt: {\n      optional: true,\n      type: Date,\n    }\n});\nSkillClass.attachSchema(new SimpleSchema({\n  isTemplate: {\n     type: String,\n     optional: true\n   },\n   isRecurring: {\n     type: String,\n     optional: true\n   },\n   className: {\n     type: String,\n     optional: true\n   },\n   plannedStart: {\n     type: String,\n     optional: true\n   }\n   ,\n   durationMins: {\n     type: Date,\n     optional: true\n   },\n   planStartTime:{\n     type: String,\n     optional: true\n   },\n   planEndTime:{\n     type: String,\n     optional: true\n   },\n   classImagePath:{\n     type: String,\n     optional: true\n   },\n   classDescription:{\n     type: String,\n     optional: true\n   },\n   plannedEnd: {\n     type: String,\n     optional: true\n   },\n   actualStart: {\n     type: Date,\n     optional: true\n   }\n   ,\n   actualEnd: {\n     type: Date,\n     optional: true\n   },\n   notes: {\n     type: Date,\n     optional: true\n   },\n   locationId: {\n     type: String,\n     optional: true\n   },\n   masterRecurringClassId: {\n     type: String,\n     optional: true\n   },\n   classTypeId: {\n     type: String,\n     optional: true\n   },\n   repeats: {\n     type: String,\n     optional: true\n   },\n   module: {\n     type: Array,\n     optional: true\n   },\n   classInstructor: {\n     type: Array,\n     optional: true\n   },\n   classAssistant: {\n     type: Array,\n     optional: true\n   },\n   classStudents: {\n     type: Array,\n     optional: true\n   },\n   schoolId:{\n     type: String,\n     optional: true\n   },\n   isNeedIgnore:{\n     type:String,\n     optional: true\n   },\n   tab_option:{\n     type:String,\n     optional: true\n   },\n   room:{\n     type:String,\n     optional: true\n   },\n   \"module.$\": {\n       type: Schema.ModuleLink,\n       optional: true\n   },\n   \"classInstructor.$\": {\n       type: Schema.InstructorLink,\n       optional: true\n   },\n   \"classAssistant.$\": {\n       type: Schema.AssistantLink,\n       optional: true\n   },\n   \"classStudents.$\": {\n       type: Schema.StudentsLink,\n       optional: true\n   }\n }));\n\n if(Meteor.isServer){\n   SkillClass._ensureIndex({className:\"text\",classDescription:\"text\"})\n   Meteor.publish(\"userSkillClass\", function(userId){\n     user = Meteor.users.findOne({_id:userId});\n     classIds = []\n     if(user.profile){\n       if(user.profile.schoolId){\n         school_class = SkillClass.find({schoolId:user.profile.schoolId});\n         classIds = school_class.map(function(a){\n           return a._id\n         })\n       }\n\n       if(user.profile){\n         joinClass = []\n         if(user.profile.classIds){\n           joinClass = user.profile.classIds\n         }\n         classIds = classIds.concat(joinClass)\n         skill_class = SkillClass.find({_id:{$in:classIds}});\n         schoolIds = skill_class.map(function(a){\n           return a.schoolId\n         })\n      }\n       classIds = classIds.concat(user.profile.classIds)\n       return [SkillClass.find({_id:{$in:classIds}}),SLocation.find({schoolId:{$in:schoolIds}}),ClassPricing.find({schoolId:{$in:schoolIds}}),MonthlyPricing.find({schoolId:{$in:schoolIds}}),ClassType.find({schoolId:{$in:schoolIds}}),School.find({_id:{$in:schoolIds}})]\n     }else{\n       return [];\n     }\n   });\n   Meteor.publish(\"SkillClassbySchool\", function(schoolId){\n      return SkillClass.find({schoolId:schoolId})\n   });\n   Meteor.publish(\"SkillClassbySchoolBySlug\", function(slug){\n      school = School.findOne({slug:slug})\n      return SkillClass.find({schoolId:school._id})\n   });\n   Meteor.publish(\"SkillClassbySchoolBySlugWithFilter\", function(slug,city,skill){\n      school = School.findOne({slug:slug})\n      slocation = []\n      classtypes = []\n      if(city){\n        slocation = SLocation.find({schoolId:school._id,city:city}).fetch();\n        if(skill){\n          classtypes = ClassType.find({schoolId:school._id,skillTypeId:skill}).fetch()\n        }\n      }\n      if(skill){\n        classtypes = ClassType.find({schoolId:school._id,skillTypeId:skill}).fetch();\n      }\n      if(slocation.length > 0 && classtypes.length > 0){\n        locationIds = slocation.map(function(a){ return a._id});\n        classTypeIds = classtypes.map(function(a){return a._id})\n        return SkillClass.find({schoolId:school._id,locationId : {$in:locationIds},classTypeId:{$in:classTypeIds}})\n      }else if(slocation.length > 0){\n        locationIds = slocation.map(function(a){ return a._id});\n        return SkillClass.find({schoolId:school._id,locationId : {$in:locationIds}})\n      }else if(classtypes.length > 0){\n        classTypeIds = classtypes.map(function(a){return a._id})\n        return SkillClass.find({schoolId:school._id,classTypeId:{$in:classTypeIds}})\n      }else{\n        return SkillClass.find({schoolId:school._id})\n      }\n   });\n   Meteor.methods({\n     addSkillClass:function(doc){\n        id = SkillClass.insert(doc)\n        if(doc.isRecurring == \"true\"){\n          newSchedule = buildScheduleExpansion(doc.repeats,id,\"\")\n          ClassSchedule.remove({skillClassId:id});\n          _.each(newSchedule, function(doc) {\n              ClassSchedule.insert(doc);\n          })\n        }else if(doc.isRecurring == \"false\"){\n          ClassSchedule.remove({skillClassId:id});\n          date = moment(doc.plannedStart,\"MM/DD/YYYY\")\n          scheduleClass = {\n              skillClassId : id,\n              eventStartTime: doc.planStartTime,\n              eventEndTime: doc.planEndTime,\n              eventDay: date.format(\"dddd\"),\n              eventDate: date.toDate()\n          }\n          ClassSchedule.insert(scheduleClass);\n        }\n        return id;\n     },\n     updateSkillClass:function(id,doc){\n        old_obj = SkillClass.findOne({_id:id})\n        old_repeats = old_obj.repeats\n        repeats = doc.repeats\n        if(old_repeats != repeats && doc.isRecurring == true){\n          newSchedule = buildScheduleExpansion(repeats,id,moment().format(\"MM/DD/YYYY\"))\n          ClassSchedule.remove({skillClassId:id,eventDate:{'$gte': moment().startOf('day').toDate()}});\n          _.each(newSchedule, function(doc) {\n              ClassSchedule.insert(doc);\n          })\n        }else if(doc.isRecurring == false){\n          ClassSchedule.remove({skillClassId:id});\n          date = moment(doc.plannedStart,\"MM/DD/YYYY\")\n          scheduleClass = {\n              skillClassId : id,\n              eventStartTime: doc.planStartTime,\n              eventEndTime: doc.planEndTime,\n              eventDay: date.format(\"dddd\"),\n              eventDate: date.toDate()\n          }\n          ClassSchedule.insert(scheduleClass);\n        }\n        return SkillClass.update({_id:id}, {$set:doc});\n     },\n     removeSkillClass:function(id){\n       ClassSchedule.remove({skillClassId:id});\n       return SkillClass.remove(id);\n     },\n     updateStatus:function(id,status){\n       status =  \"checked\"\n       skill = SkillClass.findOne({_id:id});\n       if(skill.isNeedIgnore == \"checked\"){\n         status = \"unchecked\"\n       }\n       return SkillClass.update({_id:id}, {$set:{\"isNeedIgnore\" : status}});\n     },\n     updateClassDetail:function(data){\n        skillclass = SkillClass.findOne({_id:data.classId})\n        scheduleClass = ClassSchedule.findOne({_id:data.id})\n        update_data = {\n          locationId:data.locationId,\n          eventStartTime:data.start_time,\n          eventEndTime:data.end_time\n        }\n        ClassSchedule.update({_id:data.id},{$set:update_data})\n     },\n     editClass:function(){\n\n     }\n   });\n }\n","skill_type  = \"SkillType\";  // avoid typos, this string occurs many times.\n//\nSkillType = new Mongo.Collection(skill_type);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\nSkillType.attachSchema(new SimpleSchema({\n   name: {\n     type: String,\n     optional: true\n   }\n }));\nif(Meteor.isServer){\n\n  Meteor.publish(\"SkillType\", function(argument){\n    return SkillType.find({},{sort:{\"name\": 1}})\n  });\n\n  Meteor.methods({\n    addSkillType:function(doc){\n       return SkillType.insert(doc)\n    }\n  });\n}\n","subject  = \"Subject\";  // avoid typos, this string occurs many times.\n//\nSubject = new Mongo.Collection(subject);\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\n Subject.attachSchema(new SimpleSchema({\n   name: {\n     type: String,\n     optional: true\n   },categoryId: {\n     type: String,\n     optional: true\n   }\n }));\n","class BaseTags extends Mongo.Collection{\n  insert(doc,cb){\n  doc.createdAt=new Date();\n   return super.insert(doc,cb);\n  }\n}\n\n\ntags=new BaseTags(\"Tags\");\n\n  tags.allow({\n    insert: function () {\n        return true;\n    },\n    update: function () {\n        return true;\n    },\n    remove: function () {\n        return true;\n    }\n});\n\n\ntags.attachSchema(new SimpleSchema({\n   user_id: {\n     type: String,\n     optional: true\n   },\n    tag: {\n     type: String,\n     optional: true\n   },\n    createdBy: {\n     type: String,\n     optional: true\n   },\n    createdAt:{\n         type: Date,\n       optional: true\n    },\n    class: {\n     type: String,\n     optional: true\n   },\n    updaeddAt: {\n     type: String,\n     optional: true\n   },\n    updatedBy: {\n     type: String,\n     optional: true\n   }\n }));\n\n \nif(Meteor.isServer){\n\n    Meteor.publish(\"tags\",function(){\n        return tags.find();\n    })\n}","Images = new FS.Collection(\"images\", {\n  stores: [new FS.Store.GridFS(\"images\", {})]\n});\nImages.allow({\n  insert: function(userId, doc) {\n    return true;\n  },\n  update: function(userId, doc, fieldNames, modifier) {\n    return true;\n  },\n  download: function(userId) {\n    return true;\n  },\n  remove: function (userId, parties) {\n    return true;\n  }\n});\n\nSchema = {};\nSchema.UserProfile = new SimpleSchema({\n   firstName: {\n     optional: true,\n       type: String,\n   },\n   lastName: {\n     optional: true,\n       type: String\n   },\n   nickame:{\n     optional: true,\n     type: String\n   },\n   url: {\n     optional: true,\n     type: String\n   },\n   phone: {\n     optional: true,\n     type: Number\n   },\n   pic: {\n     optional: true,\n     type: String\n   },\n   dob:{\n     optional: true,\n     type: String\n   },\n   address:{\n     optional: true,\n     type: String\n   },\n   gender:{\n     optional: true,\n     type: String\n   },\n   desc: {\n     optional: true,\n       type: String\n   },\n   expertise: {\n     optional: true,\n     type: String\n   },\n   state :{\n     optional: true,\n     type: String\n   },\n   user_type:{\n     optional: true,\n     type: String,\n     allowedValues: ['C', 'P','S','T']\n   },\n   company_id:{\n     optional: true,\n     type: String\n   },\n   role:{\n     optional: true,\n     type: String\n   },\n   access_key :{\n     type: String,\n     optional: true\n   },\n   is_demo_user :{\n     type: Boolean,\n     optional: true\n   },\n   acess_type:{\n     type:String,\n     optional: true\n   },\n   classIds:{\n     type:[String],\n     optional: true\n   },\n   schoolId:{\n     type:String,\n     optional: true\n   }\n});\nSchema.User = new SimpleSchema({\n    username: {\n        type: String,\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\n        // optional here because the accounts-password package does its own validation.\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n        optional: true\n    },\n    emails: {\n        type: Array,\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\n        // optional here because the accounts-password package does its own validation.\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n        optional: true\n    },\n    \"emails.$\": {\n        type: Object\n    },\n    \"emails.$.address\": {\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n        type: Boolean\n    },\n    // Use this registered_emails field if you are using splendido:meteor-accounts-emails-field / splendido:meteor-accounts-meld\n    registered_emails: {\n        type: Array,\n        optional: true\n    },\n    'registered_emails.$': {\n        type: Object,\n        blackbox: true\n    },\n    createdAt: {\n        type: Date,\n        optional: true\n    },\n    profile: {\n        type: Schema.UserProfile,\n        optional: true\n    },\n    // Make sure this services field is in your schema if you're using any of the accounts packages\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n    // Add `roles` to your schema if you use the meteor-roles package.\n    // Option 1: Object type\n    // If you specify that type as Object, you must also specify the\n    // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\n    // Example:\n    // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\n    // You can't mix and match adding with and without a group since\n    // you will fail validation in some cases.\n    roles: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n    // Option 2: [String] type\n    // If you are sure you will never need to use role groups, then\n    // you can specify [String] as the type\n    roles: {\n        type: Array,\n        optional: true\n    },\n    'roles.$': {\n        type: String\n    },\n    // In order to avoid an 'Exception in setInterval callback' from Meteor\n    heartbeat: {\n        type: Date,\n        optional: true\n    }\n});\nMeteor.users.attachSchema(Schema.User);\n\nMeteor.users.before.insert(function (userId, doc)\n{\n  doc.createdAt = new Date();\n});\nif (Meteor.isServer) {\n\nMeteor.methods({\n  /**\n   * Invoked by AutoForm to update a User record.\n   * @param doc The User document.\n   * @param docID It's ID.\n   */\n   editUser: function(doc, docID,role_name) {\n     console.log(doc);\n     user = Meteor.users.findOne({_id:docID});\n     if(role_name){\n       if(user && user.roles){\n         for(var i = 0 ; i < user.roles.length ;i++){\n           console.log(user.roles[i])\n           Roles.removeUsersFromRoles(docID, user.roles[i])\n         }\n       }\n       Roles.addUsersToRoles(docID,role_name)\n     }\n     if(doc){\n       console.log(\"----------\");\n       console.log(doc);\n       console.log(\"----------\");\n       Meteor.users.update({_id: docID},{$set:doc});\n     }\n        // check(doc, Meteor.users.simpleSchema());\n\n    return true;\n  },\n  addUser: function(doc) {\n    console.log(doc);\n  //  doc = _.extend({}, doc, {password: Math.random().toString(36).slice(2), login: false,email:doc.email,auto_created:true});\n    doc = _.extend({}, doc, {password: \"password\", login: false,email:doc.email,auto_created:true});\n  //  check(doc, Meteor.users.simpleSchema());\n    console.log(doc);\n   doc.profile['role']='Normal'\n   console.log(doc);\n   var user_id = Accounts.createUser(doc)\n   Accounts.sendVerificationEmail(user_id, doc.email);\n  //  Roles.addUsersToRoles(user_id, ['Normal']);\n  //  Meteor.users.update({_id: docID}, doc);\n},\n deleteUser:function(id){\n   Meteor.users.remove(id)\n },\n setAdmin:function(user_id){\n   Meteor.users.update({_id: user_id}, {$set:{\"profile.role\":\"Admin\"}});\n  //  Roles.addUsersToRoles(user_id, ['Admin']);\n },\n setNormal:function(user_id){\n   Meteor.users.update({_id: user_id}, {$set:{\"profile.role\":\"Normal\"}});\n  //  Roles.addUsersToRoles(user_id, ['Normal']);\n},\ncreateUserFromAdmin:function(email,password){\n  user_id = Accounts.createUser({email:email,password:password})\n  Accounts.sendVerificationEmail(user_id, email);\n  return user_id;\n },\n checkUserByEmail : function(email){\n   console.log(email);\n   var user = Meteor.users.findOne({\"emails.address\": email});\n   console.log(user);\n   if(user){\n     return user;\n   }else{\n     return false;\n   }\n }\n});\n\n\n  Meteor.publish(\"User\", function (user_id) {\n    if(user_id == undefined){\n      return [];\n    }\n    company_id_list =[]\n    var user = Meteor.users.findOne({_id:user_id});\n    var access_key = user.profile.access_key;\n    // company_id = user.profile.company_id\n    // if( company_id){\n    //   company_id_list.push(company_id)\n    // }\n    // company_list = Company.find({user_id:user_id}).fetch();\n    // company_list.map(function(doc){\n    //   company_id_list.push(doc._id)\n    // });\n    return Meteor.users.find({})//.find({$or:[{_id:user_id},{\"profile.access_key\":access_key}]});\n  });\n  Meteor.publish(\"UserShow\", function (user_id,id) {\n    return Meteor.users.find({_id:user_id});\n  });\n  Meteor.publish('images', function(admin_id) {\n    return Images.find({$or:[{\"metadata.admin_id\":admin_id},{\"metadata.company_id\":admin_id}]})\n  });\n  Meteor.publish(null, function (){\n    return Meteor.roles.find({})\n  })\n}\n\n\nusers = new Meteor.Pagination(Meteor.users, {\n  itemTemplate: \"User\",\n  route: \"/users/\",\n  homeRoute: '/users/',\n  // router: \"iron-router\",\n  routerTemplate: \"ListUser\",\n  routerLayout: \"Layout\",\n  divWrapper: false,\n  sort: {\n    id: 1\n  },\n  templateName: \"ListUser\",\n  perPage:5,\n  auth: function(skip, sub) {\n    var user_id = sub.userId;\n    if (!user_id) { return []; }\n    company_id_list =[]\n    var user = Meteor.users.findOne({_id:user_id});\n    access_key = user.profile.access_key;\n    var customOwnerFilters = {}\n    // var customOwnerFilters = {\"profile.access_key\":access_key}\n    //Edit custom settings if required:\n    var customSettings = {};\n   //  customSettings.fields = {address: 1}; //This is the only field that will be shown\n    customSettings.filters = customOwnerFilters\n    //Leave this part untouched:\n    var fields = customSettings.fields || this.fields\n        , sort = customSettings.sort || this.sort //Since I haven't supplied this field, the Pagination sort I've configured above will be used (=2)\n        , perPage = customSettings.perPage || this.perPage //Same as the line above\n        , _filters = _.extend({}, customSettings.filters, this.filters)\n        , _options = { fields: fields, sort: sort, limit: perPage, skip: skip };\n    return [ _filters, _options ];\n  }\n});\n","userDemand  = \"UserDemand\";  // avoid typos, this string occurs many times.\n//\nUserDemand = new Mongo.Collection(userDemand);\n\n/**\n * Create the schema\n * See: https://github.com/aldeed/meteor-autoform#common-questions\n * See: https://github.com/aldeed/meteor-autoform#affieldinput\n */\nUserDemand.attachSchema(new SimpleSchema({\n    email: {\n     type: String,\n     optional: true\n   },location: {\n     type: String,\n     optional: true\n   },\n   skill: {\n     type: String,\n     optional: true\n   },\n   classPrice: {\n     type: String,\n     optional: true\n   },\n   monthPrice: {\n     type: String,\n     optional: true\n   }\n   ,dateOfJoin: {\n     type: Date,\n     optional: true\n   }\n }));\n if(Meteor.isServer){\n   Meteor.methods({\n     addUserDemand: function(doc) {\n       console.log(doc);\n       doc.dateOfJoin = new Date();\n       return UserDemand.insert(doc);\n     }\n     });\n   }\n","/**\n * Configure Iron Router.\n * See: http://iron-meteor.github.io/iron-router/\n */\n\nRouter.configure({\n    layoutTemplate: 'Layout',\n    loadingTemplate: 'Loading'\n});\n\nif (Meteor.isClient) {\n    Router.route('/verify-email/:token', {\n        name: 'verifyemail',\n        data: function() {\n            console.log(\"verify-email\")\n            Accounts.verifyEmail(this.params.token, function(error) {\n                if (error) {\n                    toastr.error(error.reason, 'danger');\n                } else {\n                    Router.go('/')\n                    toastr.success('Email verified! Thanks!', 'Success');\n                }\n            });\n        }\n    });\n\n\n    Router.route('/evaluation_details/:id', {\n        name: 'EvaluationDetails',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/AboutUs/', {\n        name: 'AboutUs',\n        waitOn: function() {\n\n        }\n    });\n\n    Router.route('/howitworks/',\n    {\n        name: 'howitworks',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/SchoolUpload', {\n        name: 'SchoolUpload',\n        waitOn: function() {\n\n        }\n    });\n\n    Router.route('/ContactUs/', {\n        name: 'ContactUs',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/timeline/:id', {\n        name: 'timeline',\n        waitOn: function() {\n\n\n        }\n    });\n    Router.route('/schedule', {\n        name: 'ScheduleView',\n        waitOn: function() {\n\n        }\n    });\n\n    Router.route('/Login', {\n        name: 'Login',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/Join', {\n        name: 'Join',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/ForgotPassword', {\n        name: 'ForgotPassword',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/MyCalendar', {\n        name: 'MyCalendar',\n        waitOn: function() {\n          return this.subscribe(\"userSkillClass\", Meteor.userId());\n        }\n    });\n    Router.route('/ManageSchool', {\n        name: 'Schools',\n        waitOn: function() {\n          return this.subscribe(\"School\", Meteor.userId());\n        }\n    });\n    Router.route('/claimSchool', {\n        name: 'ClaimSchool',\n        waitOn: function() {\n          return [];\n        }\n    });\n    Router.route('/school', {\n        name: 'SchoolOverview',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/reset-password/:token', {\n        name: 'RecoverPassword',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/ComingSoon', {\n        name: 'ComingSoon',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/instructor', {\n        name: 'Instructor',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/class_archive', {\n        name: 'ClassArchive',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/class_edit/:id', {\n        name: 'ClassEdit',\n        waitOn: function() {\n\n        }\n    });\n\n    Router.route('/add_class', {\n        name: 'AddClass',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/school/:id', {\n        name: 'EditSchool',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/class_detail/:id', {\n        name: 'ClassDetail',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/class_template/:id', {\n        name: 'ClassTemplate',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/member_home', {\n        name: 'MemberHome',\n        waitOn: function() {\n\n        }\n    });\n\n    Router.route('/program_manager', {\n        name: 'ProgramManager',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/member_signup', {\n        name: 'membersignup',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/personal_info/:id', {\n        name: 'PersonalInfo',\n        waitOn: function() {\n\n        }\n    });\n\n    Router.route('/MemberList', {\n        name: 'MemberList',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/MemberDetails', {\n        name: 'MemberDetails',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/MemberDetailsInstructor', {\n        name: 'MemberDetailsInstructor',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/MemberDetailsStudent', {\n        name: 'MemberDetailsStudent',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/student_evaluator', {\n        name: 'StudentEvaluator',\n        waitOn: function() {\n\n        }\n    });\n\n    Router.route('/SkillView', {\n        name: 'SkillView',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/SkillList', {\n        name: 'SkillList',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/SkillEditor', {\n        name: 'SkillEditor',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/media_upload', {\n        name: 'MediaUpload',\n        waitOn: function() {}\n    });\n    Router.route('/EvaluationArchive', {\n        name: 'EvaluationArchive',\n        waitOn: function() {}\n    });\n    Router.route('/StudentProgressView', {\n        name: 'StudentProgressView',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/MemberNewAdmin', {\n        name: 'MemberNewAdmin',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/member_chooser', {\n        name: 'MemberChooser',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/schoolAdmin', {\n        template: 'schoolAdmin',\n        name: 'schoolCreate',\n        waitOn: function() {\n\n        }\n    });\n    Router.route('/schools/:schoolId/calendar', {\n        template: 'SchoolView',\n        name: 'calendar',\n        waitOn: function() {\n          var slug =  this.params.schoolId;\n          console.log(slug);\n          params = this.params.query\n          console.log(params);\n          if(params && params.city || params && params.skillType ){\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlugWithFilter\",slug,params.city,params.skillType)];\n          }else{\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlug\",slug)];\n          }\n        },\n        data:function(){\n          return School.findOne({slug:this.params.schoolId})\n        }\n    });\n    Router.route('/embed/schools/:schoolId/calendar', {\n        layoutTemplate:'iframeembed',\n        template: 'SchoolView',\n        name: 'embedcalendar',\n        waitOn: function() {\n          var slug =  this.params.schoolId;\n          console.log(slug);\n          params = this.params.query\n          console.log(params);\n          if(params && params.city || params && params.skillType ){\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlugWithFilter\",slug,params.city,params.skillType)];\n          }else{\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlug\",slug)];\n          }\n        },\n        data:function(){\n            params = this.params.query\n            if(params.height){\n              Session.set(\"embed_height\",eval(params.height))\n            }else{\n              Session.set(\"embed_height\",800)\n            }\n            if(params.width){\n              Session.set(\"embed_width\",params.width)\n            }else{\n                Session.set(\"embed_width\",null)\n            }\n          return School.findOne({slug:this.params.schoolId})\n        }\n    });\n\n    Router.route('/embed/schools/:schoolId/pricing', {\n        layoutTemplate:'iframeembed',\n        template: 'SchoolView',\n        name: 'embedPricing',\n        waitOn: function() {\n          var slug =  this.params.schoolId;\n          console.log(slug);\n          params = this.params.query\n          console.log(params);\n          if(params && params.city || params && params.skillType ){\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlugWithFilter\",slug,params.city,params.skillType)];\n          }else{\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlug\",slug)];\n          }\n        },\n        data:function(){\n          params = this.params.query\n          if(params.height){\n            Session.set(\"embed_height\",params.height)\n          }else{\n            Session.set(\"embed_height\",null)\n          }\n          if(params.width){\n            if(eval(params.width) < 1000){\n              params.width = 1000\n            }\n            Session.set(\"embed_width\",params.width)\n          }else{\n            Session.set(\"embed_width\",null)\n          }\n          return School.findOne({slug:this.params.schoolId})\n        }\n    });\n\n    Router.route('/schools/:schoolId/pricing', {\n        template: 'SchoolView',\n        name: 'pricing',\n        waitOn: function() {\n          var slug =  this.params.schoolId;\n          console.log(slug);\n          params = this.params.query\n          console.log(params);\n          if(params && params.city || params && params.skillType ){\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlugWithFilter\",slug,params.city,params.skillType)];\n          }else{\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlug\",slug)];\n          }\n        },\n        data:function(){\n          return School.findOne({slug:this.params.schoolId})\n        }\n    });\n    Router.route('/schools/:schoolId', {\n        template: 'SchoolView',\n        name: 'SlagbasedViewSchool',\n        waitOn: function() {\n          var slug =  this.params.schoolId;\n          console.log(slug);\n          params = this.params.query\n          console.log(params);\n          date = null //new Date();\n          /*date = Session.get(\"currentCalanderDate\")*/\n          if(params && params.city || params && params.skillType ){\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlugWithFilter\",slug,params.city,params.skillType)];\n          }else{\n            return [this.subscribe(\"UserSchoolbySlug\",slug),this.subscribe(\"SkillClassbySchoolBySlug\",slug)];\n          }\n        },\n        data:function(){\n          return School.findOne({slug:this.params.schoolId})\n        }\n    });\n    Router.route('/schoolAdmin/:schoolId', {\n        template: 'SchoolView',\n        name: 'viewSchool',\n        waitOn: function() {\n        var school_id =  this.params.schoolId;\n        return [this.subscribe(\"UserSchool\",school_id),this.subscribe(\"SkillClassbySchool\",school_id),this.subscribe(\"ClaimOrder\",\"\")];\n        },\n        data:function(){\n          return School.findOne({_id:this.params.schoolId})\n        }\n    });\n    Router.route('/schoolAdmin/:schoolId/edit', {\n      template: 'schoolAdmin',\n        name: 'schoolEdit',\n        waitOn: function() {\n        var school_id =  this.params.schoolId;\n         return this.subscribe(\"UserSchool\",school_id);\n        },\n        data:function(){\n          return School.findOne({_id:this.params.schoolId})\n        }\n    });\n    Router.onRun(function() {\n        try {\n            var currentRoute = Router.current().originalUrl\n        } catch (e) {\n            var currentRoute = \"/\"\n        }\n\n        console.log(currentRoute);\n\n        if (Meteor.loggingIn() || Meteor.user()) {\n            console.log(Meteor.userId())\n                // if (Meteor.user() && !Meteor.user().emails[0].verified){\n                //   if(currentRoute == \"/\" || currentRoute.indexOf(\"verify-email\") > -1){\n                //     this.next();\n                //   }else{\n                //     this.render('Home');\n                //     this.stop();\n                //   }\n                // }else{\n            this.next();\n            // }\n        } else {\n\n        }\n    });\n    Router.route('/search',  function () {\n      params = this.params.query\n      if(params && params.school){\n        this.redirect('/schools/'+params.school+\"?city=\"+params.city+\"&skillType=\"+params.skillType);\n      }else{\n        if(params && params.skillType){\n          Session.set(\"Hskill\",params.skillType)\n        }\n        if(params.city){\n          Session.set(\"initNearByLocation\",false)\n          console.log(params.city);\n          getLatLong(params.city,function(data){\n            coords = []\n            coords[0] = data.lat\n            coords[1] = data.lng\n            console.log(data);\n            Session.set(\"coords\",coords)\n            Session.set(\"SLocation\",data.formatted_address)\n            if(params.skillType){\n            Router.go('/'+\"?city=\"+params.city+\"&skillType=\"+params.skillType);\n            }else{\n              Router.go('/?city='+params.city);\n            }\n          })\n        }else{\n          Session.set(\"initNearByLocation\",false)\n          Router.go('/'+\"?skillType=\"+params.skillType);\n        }\n      }\n    });\n    Router.route('/', {\n      name: 'Home',\n      onBeforeAction: function() {\n          if (Meteor.userId() && IsDemoUser()) {\n              this.redirect('/schedule');\n              this.next()\n          } else {\n              this.next()\n          }\n      },\n      waitOn : function(){\n        params = this.params.query\n        return [];\n      }\n  });\n\n    Router.route('/profile/:id', {\n      name: 'MyProfile',\n      data: function() {\n      }\n    });\n    Router.route('/profile', {\n        name: 'Profile',\n        data: function() {\n            return Meteor.user();\n        },\n        waitOn: function() {\n            return this.subscribe(\"images\");\n        }\n    });\n\n\n\n    Router.route('/users', {\n        name: 'ListUser',\n        waitOn: function() {\n            return [this.subscribe(\"User\", Meteor.userId())]\n        },\n        onBeforeAction: function() {\n            if (Meteor.user()) {\n                this.next();\n\n            } else {\n                Router.go('Home');\n                this.next();\n            }\n        }\n    });\n    Router.route('/user/add', {\n        waitOn: function() {\n            return this.subscribe(\"Company\", Meteor.userId());\n        },\n        name: 'AddUser'\n    });\n    Router.route('/user/:_id', {\n        name: 'EditUser',\n        waitOn: function() {\n            return [\n                this.subscribe(\"UserShow\", this.params._id, this.params._id)\n            ]\n        },\n        data: function() {\n            return Meteor.users.findOne(this.params._id);\n        }\n    });\n}\n","Meteor.publish(\"school\", function() {\n    return School.find({});\n});\nMeteor.publish(\"salocation\", function() {\n    return SLocation.find({});\n});\nMeteor.publish(\"classtype\", function() {\n    return ClassType.find({});\n});\nMeteor.publish(\"sclass\", function() {\n    return Sclass.find({});\n});\nMeteor.publish(\"priceMonth\", function() {\n    return Pricemonthly.find({});\n});\nMeteor.publish(\"priceClass\", function() {\n    return Priceclass.find({});\n});","Meteor.startup(function () {\n    smtp = {\n        username: 'admin@techmeetups.com',   // eg: server@gentlenode.com\n        password: '@dmin_555',   // eg: 3eeP1gtizk5eziohfervU\n        server:   'send.one.com',  // eg: mail.gandi.net\n        port: 587\n    }\n    process.env.MAIL_URL = 'smtp://' + encodeURIComponent(smtp.username) + ':' + encodeURIComponent(smtp.password) + '@' + encodeURIComponent(smtp.server) + ':' + smtp.port;\n\n\n});\n\n\n// Meteor.startup(function () {\n//     smtp = {\n//         username: 'jayeshdalwadi2007@gmail.com',   // eg: server@gentlenode.com\n//         password: '1234567bond',   // eg: 3eeP1gtizk5eziohfervU\n//         server:   'smtp.gmail.com',  // eg: mail.gandi.net\n//         port: 465\n//     }\n//     process.env.MAIL_URL = 'smtp://' + encodeURIComponent(smtp.username) + ':' + encodeURIComponent(smtp.password) + '@' + encodeURIComponent(smtp.server) + ':' + smtp.port;\n// });\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n        // Accounts.config({\n        //   sendVerificationEmail: true\n        // });\n        Accounts.emailTemplates.from = 'admin <admin@techmeetups.com>';\n        // The public name of your application. Defaults to the DNS name of the application (eg: awesome.meteor.com).\n        Accounts.emailTemplates.siteName = 'skillshape';\n        // A Function that takes a user object and returns a String for the subject line of the email.\n        Accounts.emailTemplates.verifyEmail.subject = function(user) {\n            return 'Confirm Your Email Address';\n        };\n        // A Function that takes a user object and a url, and returns the body text for the email.\n        // Note: if you need to return HTML instead, use Accounts.emailTemplates.verifyEmail.html\n        Accounts.emailTemplates.verifyEmail.text = function(user, url) {\n            url = url.replace( '#/', '' );\n            return 'click on the following link to verify your email address: ' + url;\n        };\n        Accounts.urls.resetPassword = function(token) {\n          return Meteor.absoluteUrl('reset-password/' + token);\n        };\n  // code to run on server at startup\n\nvar _tagObj={\"Dance\":[\"African\",\"Argentine tango\",\"B-boying\",\"Ballet\",\"Ballroom dance\",\"Belly dance\",\"Bounce\",\"Break Dancing\",\"Capoeira\",\"Cha Cha\",\n\"Charleston\",\"Classical Indian dance\",\"Concert dance\",\"Contact improvisation\",\"Contemporary Dance\",\"Disco / electronic dance\",\"East Coast Swing\",\n\"Ethnic dance\",\"Experimental / freestyle\",\"Flamenco\",\"Flexing\",\"Floating\",\"Folk dance\",\"Footwork\",\"Foxtrot\",\"Hip Hop / Street Dance\",\"Jazz dance\",\n\"Jitterbug\",\"Krumping\",\"Locking\",\"MaculelÃª\",\"Mambo\",\"Medieval dance\",\"Merengue\",\"Metal Mosh\",\"Modern dance\",\"Quickstep\",\"Reggaeton\",\"Robot dance\",\n\"Rumba\",\"Salsa\",\"Samba\",\"Swing dance\",\"Tango\",\"Tap dance\",\"Vogue\",\"Waltz\",\"Zumba\"],\n\"Art/ Design/Craft\":[\"Acrylic Painting\",\"Cartoon Art\",\"Crafting\",\"Creative Writing\",\"Crocheting\",\"Drawing\",\"Figure Drawing\",\"Fingernail Art\",\n\"Graphic Design\",\"Hair Styling\",\"Knitting\",\"Makeup\",\"Oil Paint\",\"Sculpture\",\"Sewing\",\"Soap / Cosmetic\",\"Stitching\",\"Watercolor\"],\n\"Sport/Exercise\":[\"American Football\",\"Baseball\",\"Basketball\",\"Boot Camp\",\"Cycling\",\"Darts\",\"Football / Soccer\",\"Frisbee\",\"Gymnastics\",\n\"High Intensity Interval Training\",\"Jogging\",\"Juggling\",\"Other Ball Games\",\"Parkour\",\"Rugby\",\"Sprinting\",\"Swimming\",\"Tai Chi\",\"Tennis\",\n\"Ultimate Frisbee\",\"Walking\",\"Weight / Resistance\",\"Racketball\"],\n\"Language\":[\"Arabic\",\"Bengali\",\"Dutch\",\"English\",\"French\",\"German\",\"Hindi\",\"Italian\",\"Japanese\",\"Mandarin\",\"Portuguese\",\"Russian\",\"Spanish\"],\n\"Coding and Computers\":[\"Android\",\"C#\",\"C+\",\"iOS\",\"Javascript\",\"Javascript\",\"Meteor\",\"Node\",\"PHP\",\"Python\"],\n\"Business/Marketing\":[\"Accounting\",\"Business Strategy\",\"Business Writing\",\"Entrepreneurship\",\"Marketing\",\"Sales\",\"Software Development\"],\n\"Meditation/Religion\":[\"Meditation\",\"Catholic Prayer Meeting\",\"Muslim Prayer Meeting\",\"Buddhist Chanting\",\"Protestant Prayer Meeting\",\n\"Christian Meeting\",\"Bible Study\",\"Koran Study\",\"Sutra Study\"],\n\"Acting/Comedy\":[\"Acting Class\",\"Improvisation\",\"Stand-Up Comedy\",\"Movement / Slapstick\"],\n\"Games\":[\"Video Games\",\"Role Playing Games\",\"Miniature Games\",\"Chess\",\"Checkers\",\"Poker\",\"Board Games\",\"Card Games\"],\n\"Pets\":[\"Dog Walks\",\"Dog Grooming\",\"Dog Meetups\",\"Exotic Pet Meetups\",\"Dog Training\"],\n\"Parents/Children\":[\"Child Meetup by Age\",\"Parents with Autistic Children\",\"Parents with Special Needs Children\"],\n\"Yoga/Pilates\":[\"Anusara\",\"Ashtanga\",\"Bikram\",\"Hatha\",\"Hot Yoga\",\"Iyengar\",\"Jivamukti\",\"Kripalu\",\"Kundalini\",\"Prenatal\",\n\"Restorative\",\"Sivananda\",\"Viniyoga\",\"Vinyasa / Power\",\"Yin\"],\n\"Food and Beverage\":[\"Cooking\",\"Fermentation\",\"Bread Making\",\"Wine Tasting\",\"Beer Making\",\"Cocktail Mixing\"]}\n\n  if(tags.find().count()==0){\n\n        for(var key in _tagObj){\n            _tagObj[key].forEach((f)=>{\n            tags.insert({tag:f,class:key});\n        })\n        }\n\n        tags.insert({tag:'Aikido',class:'Martial Art'});\n        tags.insert({tag:'American Karate',class:'Martial Art'});\n        tags.insert({tag:'American Kenpo',class:'Martial Art'});\n        tags.insert({tag:'Arnis/Eskrima/Kali',class:'Martial Art'});\n        tags.insert({tag:'Brazilian jiu-jitsu',class:'Martial Art'});\n        tags.insert({tag:'DaitÅ-ryÅ« Aiki-jÅ«jutsu',class:'Martial Art'});\n        tags.insert({tag:'Danzan-ryÅ«',class:'Martial Art'});\n        tags.insert({tag:'Hapkido',class:'Martial Art'});\n        tags.insert({tag:'Iaido',class:'Martial Art'});\n        tags.insert({tag:'Japanese Jujitsu',class:'Martial Art'});\n        tags.insert({tag:'Japanese Karate',class:'Martial Art'});\n        tags.insert({tag:'Japnese KenPo',class:'Martial Art'});\n        tags.insert({tag:'Jeet Kune Do',class:'Martial Art'});\n        tags.insert({tag:'Judo',class:'Martial Art'});\n        tags.insert({tag:'Jujutsu',class:'Martial Art'});\n        tags.insert({tag:'Kalaripayattu',class:'Martial Art'});\n        tags.insert({tag:'Kendo',class:'Martial Art'});\n        tags.insert({tag:'Kenjutsu',class:'Martial Art'});\n        tags.insert({tag:'Kick Boxing',class:'Martial Art'});\n        tags.insert({tag:'Krav Maga',class:'Martial Art'});\n        tags.insert({tag:'Kung Fu',class:'Martial Art'});\n        tags.insert({tag:'Mixed Martial Arts',class:'Martial Art'});\n        tags.insert({tag:'Muay Thai',class:'Martial Art'});\n        tags.insert({tag:'Ninjutsu',class:'Martial Art'});\n        tags.insert({tag:'Nippon Kempo',class:'Martial Art'});\n        tags.insert({tag:'Okinawan martial arts',class:'Martial Art'});\n        tags.insert({tag:'Japanese Karate',class:'Martial Art'});\n        tags.insert({tag:'Other Traditional Martial Art',class:'Martial Art'});\n        tags.insert({tag:'Pankration',class:'Martial Art'});\n        tags.insert({tag:'Sambo',class:'Martial Art'});\n        tags.insert({tag:'Jujutsu',class:'Martial Art'});\n        tags.insert({tag:'Savate',class:'Martial Art'});\n        tags.insert({tag:'SCA',class:'Martial Art'});\n        tags.insert({tag:'Shootfighting (American)',class:'Martial Art'});\n        tags.insert({tag:'Small Circle Jujutsu',class:'Martial Art'});\n        tags.insert({tag:'Sumo',class:'Martial Art'});\n        tags.insert({tag:'Systema',class:'Martial Art'});\n        tags.insert({tag:\"T'ai chi ch'uan\",class:'Martial Art'});\n        tags.insert({tag:'Vale Tudo',class:'Martial Art'});\n        tags.insert({tag:'Wing Chun',class:'Martial Art'});\n        tags.insert({tag:'WuShu',class:'Martial Art'});\n\n}\n\n});\n\nif (Meteor.isServer)\n{\n  S3.config = {\n      key: 'AKIAIUDOMFJ4ZGYKIO6Q',\n      secret: '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',\n      bucket: 'skillshape',\n      region: 'us-west-1'\n  };\n  Accounts.onCreateUser(function(options, user)\n  {\n      console.log(\"on account create\");\n      console.log(options);\n      if(options.profile == null || options.profile == undefined){\n        user.profile = {\"role\":\"Admin\",\"access_key\":Math.random().toString(36).slice(2)}\n        // Roles.addUsersToRoles(user._id,'admin')\n        // console.log(Roles.userIsInRole(Meteor.userId(),'admin'));\n      }else{\n        user.profile =  options.profile\n      }\n      user.profile = _.extend(user.profile, {\"user_type\":\"C\"});\n\n      debugger;\n\n     if(options.preverfiedUser) {\n        user.emails[0].verified=true;\n        return user;\n     }\n\n      console.log(\"--------------------USER-------------------\")\n      \n      console.log(user);\n\n      console.log(\"--------------------OPTIONS-------------------\")\n\n      console.log(options);\n\n      if(options.auto_created == true){\n        try {\n          userRegistration(user,options.password)\n        } catch (e) {\n\n        }\n        return user;\n      }\n      try {\n        userRegistration(user,\"hidden\")\n      } catch (e) {\n        console.log(e)\n      }\n      return user;\n  });\n  \n    var userRegistration = function(user,pass)\n    {\n        var fromEmail = \"admin@techmeetups.com\";\n        var toEmail = user.emails[0].address;\n        Email.send({\n            from: fromEmail,\n            to: toEmail,\n            replyTo: fromEmail ,\n            subject: \"skillshape Registration\",\n            text: \"Hi \"+user.emails[0].address+\",\\nYour Email: \"+user.emails[0].address+\" has been registered.\"+\n            \"\\nYour password is : \"+pass+\"\\n\\n\"+\n            \"Thank you.\\n\"+\n            \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n            // + \"http://www.graphical.io/assets/img/Graphical-IO.png\"\n        });\n    }\n\n    var userFeedBack = function(user,email,message,request)\n    {\n        var fromEmail = \"admin@techmeetups.com\";\n        var toEmail = \"admin@techmeetups.com\";\n        Email.send({\n            from: fromEmail,\n            to: toEmail,\n            replyTo: fromEmail ,\n            subject: \"skillshape Feedback\",\n            text: \"Hi ,\\nWe have feedback from : \"+user+\"(\"+email+\")\"+\n            \"\\nHis feedback request is : \"+request+\"\\n\"+\n            \"\\nMessage : \"+message+\"\\n\\n\"+\n            \"Thank you.\\n\"+\n            \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n            // + \"http://www.graphical.io/assets/img/Graphical-IO.png\"\n        });\n    }\n\n    var userPasswordReset = function(user,pass)\n    {\n        var fromEmail = \"admin@techmeetups.com\";\n        var toEmail = user.emails[0].address;\n        Email.send({\n            from: fromEmail,\n            to: toEmail,\n            replyTo: fromEmail ,\n            subject: \"skillshape Password Reset\",\n            text: \"Hi \"+user.emails[0].address+\",\\nYour password has been reset.\"+\n            \"\\nYour new password is : \"+pass+\"\\n\\n\"+\n            \"Thank you.\\n\"+\n            \"The skillshape Team.\\n\"+Meteor.absoluteUrl()+\"\\n\"\n            // +\"http://www.graphical.io/assets/img/Graphical-IO.png\"\n        });\n    }\n\n    Meteor.publish(\"roles\", function ()\n    {\n        return Meteor.roles.find({});\n    });\n\n    var absolutePath = function(domain,href)\n    {\n        var url = require('url') ;\n        var link = url.resolve(domain,href)\n        return link\n    }\n\n\n    Meteor.methods({\n      sendVerificationLink() {\n         var userId = Meteor.userId();\n         if ( userId ) {\n           return Accounts.sendVerificationEmail( userId );\n         }\n       },\n      get_url :function(url)\n      {\n        return Meteor.http.get(url, {headers: {\"User-Agent\": \"Meteor/1.0\"},timeout:25000});\n      },\n      sendfeedbackToAdmin : function(user,email,message,request){\n        userFeedBack(user,email,message,request)\n        return true;\n      }\n    });\n  var restServiceGetCall = function (url)\n  {\n      var result = HTTP.get(url);\n      if (result.statusCode == 200)\n      {\n          response = JSON.parse(result.content);\n          return response;\n      }\n      else\n      {\n          var json = JSON.parse(result.content);\n          throw new Meteor.Error(result.statusCode, json.error);\n      }\n  };\n}\n"]}